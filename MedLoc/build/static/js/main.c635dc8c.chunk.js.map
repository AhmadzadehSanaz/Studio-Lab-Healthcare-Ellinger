{"version":3,"sources":["components/Data/WorldTable.jsx","components/Data/Boxplot.jsx","components/Data/Viz.jsx","components/Maps/Legend.jsx","components/Maps/Mainmap.jsx","components/Maps/PreviewMap.jsx","components/Interface/RunButton.jsx","components/Controls/MLSetup.jsx","components/Controls/ListSelector.jsx","components/Controls/Synthesizer.jsx","components/Interface/Toggle.jsx","components/Loading.jsx","components/Interface/Navbar.jsx","components/DashApp.jsx","App.js","serviceWorker.js","index.js"],"names":["WorldTable","props","state","stats","loading","columns","dataState","height","getMuiTheme","createMuiTheme","overrides","MUIDataTable","root","backgroundColor","margin","padding","paper","boxShadow","MUIDataTableBodyCell","textAlign","MUIDataTableToolbar","minHeight","tableRef","React","createRef","document","getElementById","clientHeight","this","setState","dataItems","dataPopulator","dataProps","features","key","hasOwnProperty","firstProp","Object","keys","properties","push","userFeaturesOriginal","userFeaturesProps","map","feature","replace","columnValues","f","name","label","slice","reverse","Fragment","style","marginLeft","marginRight","theme","title","float","color","data","options","filter","rowHover","downloadOptions","filename","separator","filterType","responsive","tableBodyHeight","draggableColumns","enabled","transitionTime","rowsPerPageOptions","rowsPerPage","viewColumns","Component","country","burger","burgerColor","sandwich","sandwichColor","kebab","kebabColor","fries","friesColor","donut","donutColor","Viz","indexBy","top","right","bottom","left","valueScale","type","colors","scheme","defs","id","background","size","stagger","rotation","lineWidth","spacing","fill","match","borderColor","from","modifiers","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","labelSkipWidth","labelSkipHeight","labelTextColor","legends","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","animate","motionStiffness","motionDamping","Legend","parts","result","delta","split","L","control","position","onAdd","to","d","div","DomUtil","create","grades","extentProps","labels","i","length","innerHTML","join","leaflet","addTo","MapControl","withLeaflet","Mainmap","dummy","clean_data","geojson","useRef","columnName","userSelectedItems","legendValues","d3","domain","range","LayersControl","BaseLayer","Overlay","useEffect","current","leafletElement","eachLayer","layer","bindPopup","Map","attributionControl","center","zoom","width","TileLayer","url","GeoJSON","ref","fillColor","weight","opacity","dashArray","fillOpacity","PreviewMap","featureName","breaks","colorScale","columnNameClean","groups","ss","cluster","Set","removeControl","Array","breaksCopy","isinteger","toFixed","console","log","undefined","useStyles","makeStyles","button","Runbutton","classes","Button","onClick","propsOnClick","variant","className","endIcon","Icon","formControl","minWidth","selectEmpty","marginTop","SimpleSelect","useState","setCluster","Grid","container","alignItems","FormControl","Select","labelId","value","onChange","event","target","displayEmpty","MenuItem","handleSubmit","userFeatures","fontSize","cardHeader","list","palette","overflow","textTransform","MuiTypography","MuiListItem","not","a","b","indexOf","intersection","TransferList","listItems","listItemsCleaned","item","checked","setChecked","preview","setPreview","setLeft","setRight","leftChecked","rightChecked","featureProps","items","handleToggle","currentIndex","newChecked","splice","handleTogglePreview","fakeValue","methodProps","handleToggleSelected","numberOfChecked","handleToggleAll","Card","CardHeader","avatar","Checkbox","indeterminate","disabled","inputProps","subheader","Tooltip","Divider","List","dense","component","role","ListItem","disableRipple","tabIndex","icon","checkedIcon","ListItemText","primary","concat","aria-label","customListSelected","Typography","a11yProps","index","Synthesizer","setValue","AppBar","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","Toggle","FormGroup","FormControlLabel","Switch","checkedMain","toggleProps","display","CircularIndeterminate","CircularProgress","grow","flexGrow","menuButton","breakpoints","up","search","borderRadius","shape","fade","common","white","searchIcon","pointerEvents","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","sectionDesktop","sectionMobile","PrimarySearchAppBar","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","mobileMenuId","renderMobileMenu","IconButton","Badge","badgeContent","aria-controls","aria-haspopup","Toolbar","edge","noWrap","InputBase","placeholder","input","DashApp","stageCanvasRef","divHeight","setDivHeight","offsetHeight","fetchUrl","setData","axios","get","then","res","catch","err","message","getData","userSelected","setUserSelected","userClicked","setCheckedMain","setUserFeatures","clusterNum","Features","mlRequest","post","JSON","stringify","headers","response","error","class","userClickedProp","flexDirection","prev","checkedProps","heightProp","App","window","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c635dc8c.chunk.js","sourcesContent":["import React from \"react\";\nimport MUIDataTable from \"mui-datatables\";\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport equal from \"fast-deep-equal\";\n\nclass WorldTable extends React.Component {\n\tconstructor (props) {\n\t\tsuper(props);\n\t\tthis.tableRef = React.createRef();\n\t}\n\tstate = {\n\t\tstats: [],\n\t\tloading: false,\n\t\tcolumns: [],\n\t\tdataState: [],\n\t\theight: 201\n\t};\n\n\tgetInitialState () {\n\t\treturn { state: 0 };\n\t}\n\n\tcomponentDidMount () {\n\t\tconst height = document.getElementById(\"tble\").clientHeight;\n\t\tthis.setState({ height });\n\t}\n\tgetMuiTheme = () =>\n\t\tcreateMuiTheme({\n\t\t\toverrides: {\n\t\t\t\tMUIDataTable: {\n\t\t\t\t\troot: {\n\t\t\t\t\t\tbackgroundColor: \"red\",\n\t\t\t\t\t\tmargin: \"dense\",\n\t\t\t\t\t\tpadding: \"auto\"\n\t\t\t\t\t},\n\t\t\t\t\tpaper: {\n\t\t\t\t\t\tboxShadow: \"none\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tMUIDataTableBodyCell: {\n\t\t\t\t\troot: {\n\t\t\t\t\t\tbackgroundColor: \"inherit\",\n\t\t\t\t\t\tpadding: \"3px\",\n\t\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\t\tmargin: \"dense\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tMUIDataTableToolbar: {\n\t\t\t\t\troot: {\n\t\t\t\t\t\tminHeight: \"40px\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\trender () {\n\t\t// Getting data and processing to format acceptable by table\n\t\tlet listItems = []; //column names\n\t\tlet dataItems = []; //processed data\n\n\t\tlet dataPopulator = this.props.dataProps.features; //getting features from the main json\n\t\tif (dataPopulator !== null) {\n\t\t\tfor (var key in dataPopulator) {\n\t\t\t\tif (dataPopulator.hasOwnProperty(key)) {\n\t\t\t\t\tlet firstProp = dataPopulator[key];\n\t\t\t\t\tlistItems = Object.keys(firstProp.properties);\n\t\t\t\t\tdataItems.push(firstProp.properties);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet userFeaturesOriginal = [];\n\t\tif (this.props.userFeaturesProps !== null) {\n\t\t\tuserFeaturesOriginal = this.props.userFeaturesProps.map((feature) =>\n\t\t\t\tfeature.replace(/ /g, \"_\")\n\t\t\t);\n\t\t}\n\t\t// let columnValues1 = [ \"fid\" ];\n\t\tlet columnValues = userFeaturesOriginal.map((f) => ({ name: f, label: f.slice(0, 20) }));\n\t\tcolumnValues.push(\"fid\");\n\n\t\tcolumnValues.reverse();\n\t\t// console.log(columnValues);\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div style={{ marginLeft: \"5px\", marginRight: \"5px\" }}>\n\t\t\t\t\t<br />\n\n\t\t\t\t\t<MuiThemeProvider theme={this.getMuiTheme()}>\n\t\t\t\t\t\t<MUIDataTable\n\t\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\t\t<h4 style={{ float: \"left\", color: \"#383838\" }}>Data Explorer</h4>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcolumns={columnValues}\n\t\t\t\t\t\t\tdata={dataItems}\n\t\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\t\tfilter: true,\n\n\t\t\t\t\t\t\t\trowHover: true,\n\t\t\t\t\t\t\t\tdownloadOptions: { filename: \"CustomDownload.csv\", separator: \",\" },\n\t\t\t\t\t\t\t\tfilterType: \"dropdown\",\n\n\t\t\t\t\t\t\t\tresponsive: \"stacked\",\n\t\t\t\t\t\t\t\ttableBodyHeight: \"27vh\",\n\t\t\t\t\t\t\t\tdraggableColumns: { enabled: true, transitionTime: 300 },\n\t\t\t\t\t\t\t\trowsPerPageOptions: [ 5, 10, 50 ],\n\t\t\t\t\t\t\t\trowsPerPage: 5,\n\t\t\t\t\t\t\t\tviewColumns: true\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</MuiThemeProvider>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default WorldTable;\n","import React from 'react';\nimport {\n\tVictoryChart,\n\tVictoryZoomContainer,\n\tVictoryLine,\n\tVictoryBrushContainer,\n\tVictoryAxis,\n\tVictoryTheme,\n\tVictoryBoxPlot\n} from 'victory';\n\nclass Boxplot extends React.Component {\n\tconstructor () {\n\t\tsuper();\n\t\tthis.state = {};\n\t}\n\n\thandleZoom (domain) {\n\t\tthis.setState({ selectedDomain: domain });\n\t}\n\n\thandleBrush (domain) {\n\t\tthis.setState({ zoomDomain: domain });\n\t}\n\n\trender () {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{/* <VictoryChart\n\t\t\t\t\twidth={550}\n\t\t\t\t\theight={300}\n\t\t\t\t\tscale={{ x: 'time' }}\n\t\t\t\t\ttheme={VictoryTheme.material}\n\t\t\t\t\tcontainerComponent={\n\t\t\t\t\t\t<VictoryZoomContainer\n\t\t\t\t\t\t\tresponsive={false}\n\t\t\t\t\t\t\tzoomDimension='x'\n\t\t\t\t\t\t\tzoomDomain={this.state.zoomDomain}\n\t\t\t\t\t\t\tonZoomDomainChange={this.handleZoom.bind(this)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}>\n\t\t\t\t\t<VictoryLine\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tdata: { stroke: 'tomato' }\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdata={[\n\t\t\t\t\t\t\t{ x: new Date(1982, 1, 1), y: 125 },\n\t\t\t\t\t\t\t{ x: new Date(1987, 1, 1), y: 257 },\n\t\t\t\t\t\t\t{ x: new Date(1993, 1, 1), y: 345 },\n\t\t\t\t\t\t\t{ x: new Date(1997, 1, 1), y: 515 },\n\t\t\t\t\t\t\t{ x: new Date(2001, 1, 1), y: 132 },\n\t\t\t\t\t\t\t{ x: new Date(2005, 1, 1), y: 305 },\n\t\t\t\t\t\t\t{ x: new Date(2011, 1, 1), y: 270 },\n\t\t\t\t\t\t\t{ x: new Date(2015, 1, 1), y: 470 }\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>∫\n\t\t\t\t</VictoryChart>\n\n\t\t\t\t<VictoryChart\n\t\t\t\t\ttheme={VictoryTheme.material}\n\t\t\t\t\twidth={550}\n\t\t\t\t\theight={90}\n\t\t\t\t\tscale={{ x: 'time' }}\n\t\t\t\t\tpadding={{ top: 0, left: 50, right: 50, bottom: 30 }}\n\t\t\t\t\tcontainerComponent={\n\t\t\t\t\t\t<VictoryBrushContainer\n\t\t\t\t\t\t\tresponsive={false}\n\t\t\t\t\t\t\tbrushDimension='x'\n\t\t\t\t\t\t\tbrushDomain={this.state.selectedDomain}\n\t\t\t\t\t\t\tonBrushDomainChange={this.handleBrush.bind(this)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}>\n\t\t\t\t\t<VictoryAxis\n\t\t\t\t\t\ttickValues={[\n\t\t\t\t\t\t\tnew Date(1985, 1, 1),\n\t\t\t\t\t\t\tnew Date(1990, 1, 1),\n\t\t\t\t\t\t\tnew Date(1995, 1, 1),\n\t\t\t\t\t\t\tnew Date(2000, 1, 1),\n\t\t\t\t\t\t\tnew Date(2005, 1, 1),\n\t\t\t\t\t\t\tnew Date(2010, 1, 1),\n\t\t\t\t\t\t\tnew Date(2015, 1, 1)\n\t\t\t\t\t\t]}\n\t\t\t\t\t\ttickFormat={(x) => new Date(x).getFullYear()}\n\t\t\t\t\t/>\n\t\t\t\t\t<VictoryLine\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tdata: { stroke: 'tomato' }\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdata={[\n\t\t\t\t\t\t\t{ x: new Date(1982, 1, 1), y: 125 },\n\t\t\t\t\t\t\t{ x: new Date(1987, 1, 1), y: 257 },\n\t\t\t\t\t\t\t{ x: new Date(1993, 1, 1), y: 345 },\n\t\t\t\t\t\t\t{ x: new Date(1997, 1, 1), y: 515 },\n\t\t\t\t\t\t\t{ x: new Date(2001, 1, 1), y: 132 },\n\t\t\t\t\t\t\t{ x: new Date(2005, 1, 1), y: 305 },\n\t\t\t\t\t\t\t{ x: new Date(2011, 1, 1), y: 270 },\n\t\t\t\t\t\t\t{ x: new Date(2015, 1, 1), y: 470 }\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t</VictoryChart> */}\n\n\t\t\t\t<VictoryChart\n\t\t\t\t\tdomainPadding={20}\n\t\t\t\t\twidth={500}\n\t\t\t\t\theight={400}\n\t\t\t\t\ttheme={VictoryTheme.material}\n\t\t\t\t\tcolorScale={'warm'}\n\t\t\t\t\tcontainerComponent={\n\t\t\t\t\t\t<VictoryZoomContainer\n\t\t\t\t\t\t\tresponsive={false}\n\t\t\t\t\t\t\tzoomDimension='x'\n\t\t\t\t\t\t\tzoomDomain={this.state.zoomDomain}\n\t\t\t\t\t\t\tonZoomDomainChange={this.handleZoom.bind(this)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}>\n\t\t\t\t\t<VictoryBoxPlot\n\t\t\t\t\t\tboxWidth={20}\n\t\t\t\t\t\tdata={[\n\t\t\t\t\t\t\t{ x: 1, y: [ 1, 2, 3, 5 ] },\n\t\t\t\t\t\t\t{ x: 2, y: [ 3, 2, 8, 10 ] },\n\t\t\t\t\t\t\t{ x: 3, y: [ 2, 8, 6, 5 ] },\n\t\t\t\t\t\t\t{ x: 4, y: [ 1, 3, 2, 9 ] }\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t</VictoryChart>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default Boxplot;\n","import React from 'react';\nimport { ResponsiveBar } from '@nivo/bar';\n\nconst data = [\n\t{\n\t\tcountry: 'AD',\n\t\t'hot dog': 92,\n\t\t'hot dogColor': 'hsl(146, 70%, 50%)',\n\t\tburger: 177,\n\t\tburgerColor: 'hsl(138, 70%, 50%)',\n\t\tsandwich: 113,\n\t\tsandwichColor: 'hsl(128, 70%, 50%)',\n\t\tkebab: 164,\n\t\tkebabColor: 'hsl(89, 70%, 50%)',\n\t\tfries: 28,\n\t\tfriesColor: 'hsl(224, 70%, 50%)',\n\t\tdonut: 187,\n\t\tdonutColor: 'hsl(130, 70%, 50%)'\n\t},\n\t{\n\t\tcountry: 'AE',\n\t\t'hot dog': 168,\n\t\t'hot dogColor': 'hsl(178, 70%, 50%)',\n\t\tburger: 83,\n\t\tburgerColor: 'hsl(338, 70%, 50%)',\n\t\tsandwich: 4,\n\t\tsandwichColor: 'hsl(302, 70%, 50%)',\n\t\tkebab: 1,\n\t\tkebabColor: 'hsl(258, 70%, 50%)',\n\t\tfries: 101,\n\t\tfriesColor: 'hsl(331, 70%, 50%)',\n\t\tdonut: 169,\n\t\tdonutColor: 'hsl(171, 70%, 50%)'\n\t},\n\t{\n\t\tcountry: 'AF',\n\t\t'hot dog': 51,\n\t\t'hot dogColor': 'hsl(301, 70%, 50%)',\n\t\tburger: 68,\n\t\tburgerColor: 'hsl(32, 70%, 50%)',\n\t\tsandwich: 192,\n\t\tsandwichColor: 'hsl(97, 70%, 50%)',\n\t\tkebab: 146,\n\t\tkebabColor: 'hsl(64, 70%, 50%)',\n\t\tfries: 106,\n\t\tfriesColor: 'hsl(274, 70%, 50%)',\n\t\tdonut: 160,\n\t\tdonutColor: 'hsl(314, 70%, 50%)'\n\t},\n\t{\n\t\tcountry: 'AG',\n\t\t'hot dog': 152,\n\t\t'hot dogColor': 'hsl(330, 70%, 50%)',\n\t\tburger: 24,\n\t\tburgerColor: 'hsl(288, 70%, 50%)',\n\t\tsandwich: 106,\n\t\tsandwichColor: 'hsl(303, 70%, 50%)',\n\t\tkebab: 125,\n\t\tkebabColor: 'hsl(38, 70%, 50%)',\n\t\tfries: 141,\n\t\tfriesColor: 'hsl(140, 70%, 50%)',\n\t\tdonut: 111,\n\t\tdonutColor: 'hsl(31, 70%, 50%)'\n\t}\n];\n\nexport default function Viz (){\n\treturn (\n\t\t<ResponsiveBar\n\t\t\tdata={data}\n\t\t\tkeys={[ 'Cluster 1', 'Cluster 2', 'Cluster 3', 'Cluster 4', 'Cluster 5', 'Cluster 6' ]}\n\t\t\tindexBy='country'\n\t\t\tmargin={{ top: 50, right: 130, bottom: 50, left: 60 }}\n\t\t\tpadding={0.3}\n\t\t\tvalueScale={{ type: 'linear' }}\n\t\t\tcolors={{ scheme: 'nivo' }}\n\t\t\tdefs={[\n\t\t\t\t{\n\t\t\t\t\tid: 'dots',\n\t\t\t\t\ttype: 'patternDots',\n\t\t\t\t\tbackground: 'inherit',\n\t\t\t\t\tcolor: '#38bcb2',\n\t\t\t\t\tsize: 4,\n\t\t\t\t\tpadding: 1,\n\t\t\t\t\tstagger: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'lines',\n\t\t\t\t\ttype: 'patternLines',\n\t\t\t\t\tbackground: 'inherit',\n\t\t\t\t\tcolor: '#eed312',\n\t\t\t\t\trotation: -45,\n\t\t\t\t\tlineWidth: 6,\n\t\t\t\t\tspacing: 10\n\t\t\t\t}\n\t\t\t]}\n\t\t\tfill={[\n\t\t\t\t{\n\t\t\t\t\tmatch: {\n\t\t\t\t\t\tid: 'Cluster 1'\n\t\t\t\t\t},\n\t\t\t\t\tid: 'dots'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tmatch: {\n\t\t\t\t\t\tid: 'Cluster 2'\n\t\t\t\t\t},\n\t\t\t\t\tid: 'lines'\n\t\t\t\t}\n\t\t\t]}\n\t\t\tborderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n\t\t\taxisTop={null}\n\t\t\taxisRight={null}\n\t\t\taxisBottom={{\n\t\t\t\ttickSize: 5,\n\t\t\t\ttickPadding: 5,\n\t\t\t\ttickRotation: 0,\n\t\t\t\tlegend: 'country',\n\t\t\t\tlegendPosition: 'middle',\n\t\t\t\tlegendOffset: 32\n\t\t\t}}\n\t\t\taxisLeft={{\n\t\t\t\ttickSize: 5,\n\t\t\t\ttickPadding: 5,\n\t\t\t\ttickRotation: 0,\n\t\t\t\tlegend: 'food',\n\t\t\t\tlegendPosition: 'middle',\n\t\t\t\tlegendOffset: -40\n\t\t\t}}\n\t\t\tlabelSkipWidth={12}\n\t\t\tlabelSkipHeight={12}\n\t\t\tlabelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n\t\t\tlegends={[\n\t\t\t\t{\n\t\t\t\t\tdataFrom: 'keys',\n\t\t\t\t\tanchor: 'bottom-right',\n\t\t\t\t\tdirection: 'column',\n\t\t\t\t\tjustify: false,\n\t\t\t\t\ttranslateX: 120,\n\t\t\t\t\ttranslateY: 0,\n\t\t\t\t\titemsSpacing: 2,\n\t\t\t\t\titemWidth: 100,\n\t\t\t\t\titemHeight: 20,\n\t\t\t\t\titemDirection: 'left-to-right',\n\t\t\t\t\titemOpacity: 0.85,\n\t\t\t\t\tsymbolSize: 20,\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ton: 'hover',\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\titemOpacity: 1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]}\n\t\t\tanimate={true}\n\t\t\tmotionStiffness={90}\n\t\t\tmotionDamping={15}\n\t\t/>\n\t);\n}\n","import { MapControl, withLeaflet } from \"react-leaflet\";\nimport L from \"leaflet\";\n\nclass Legend extends MapControl {\n\tcreateLeafletElement (props) {}\n\n\tcomponentDidMount () {\n\t\t// get color depending on population density value\n\n\t\tfunction getColor (d){\n\t\t\tvar color;\n\t\t\tif (d > 1000) {\n\t\t\t\tcolor = \"#800026\";\n\t\t\t} else if (d > 500) {\n\t\t\t\tcolor = \"#BD0026\";\n\t\t\t} else if (d > 200) {\n\t\t\t\tcolor = \"#E31A1C\";\n\t\t\t} else if (d > 100) {\n\t\t\t\tcolor = \"#FC4E2A\";\n\t\t\t} else if (d > 50) {\n\t\t\t\tcolor = \"#FD8D3C\";\n\t\t\t} else color = \"#FEB24C\";\n\t\t\treturn color;\n\t\t}\n\n\t\tfunction split (left, right, parts){\n\t\t\tvar result = [],\n\t\t\t\tdelta = (right - left) / (parts - 1);\n\t\t\twhile (left < right) {\n\t\t\t\tresult.push(left);\n\t\t\t\tleft += delta;\n\t\t\t}\n\t\t\tresult.push(right);\n\t\t\treturn result;\n\t\t}\n\t\tlet mamad = split(100, 200, 5);\n\n\t\tconst legend = L.control({ position: \"topright\" });\n\n\t\tlegend.onAdd = () => {\n\t\t\tconst div = L.DomUtil.create(\"div\", \"info legend\");\n\t\t\tconst grades = [\n\t\t\t\tthis.props.extentProps,\n\t\t\t\tthis.props.extentProps,\n\t\t\t\tthis.props.extentProps\n\t\t\t];\n\t\t\tlet labels = [];\n\t\t\tlet from;\n\t\t\tlet to;\n\n\t\t\tfor (let i = 0; i < grades.length; i++) {\n\t\t\t\tfrom = grades[i];\n\t\t\t\tto = grades[i + 1];\n\n\t\t\t\tlabels.push(\n\t\t\t\t\t'<i style=\"background:' +\n\t\t\t\t\t\tgetColor(from + 1) +\n\t\t\t\t\t\t'\"></i> ' +\n\t\t\t\t\t\tfrom +\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tto ? \"&ndash;\" + to :\n\t\t\t\t\t\t\t\"+\")\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tdiv.innerHTML = labels.join(\"<br>\");\n\t\t\treturn div;\n\t\t};\n\n\t\tconst { map } = this.props.leaflet;\n\t\tlegend.addTo(map);\n\t}\n}\n\nexport default withLeaflet(Legend);\n","/* eslint-disable no-unreachable */\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Map, GeoJSON, TileLayer, LayersControl, Popup } from \"react-leaflet\";\nimport Legend from \"./Legend\";\nimport HighlightedGeoJson from \"./HighlightedGeoJson\";\nimport L from \"leaflet\";\nimport * as d3 from \"d3\";\nimport dummy from \"./states.json\";\n\nfunction Mainmap (props){\n\t//getting the first object from geojson to extract column names\n\n\tlet clusterViz = dummy.clean_data;\n\n\tlet dataPopulator = props.dataProps.features;\n\t// let dataPopulator = clusterViz;\n\tconst geojson = useRef();\n\n\t// if (clusterViz !== null) {\n\t// \tfor (var key in clusterViz) {\n\t// \t\tif (clusterViz.hasOwnProperty(key)) {\n\t// \t\t\tlet firstPropA = clusterViz[key];\n\t// \t\t\tlet listItemsA = Object.keys(firstPropA.properties);\n\t// \t\t\t// let listValue = Object.values(firstProp.properties);\n\n\t// \t\t\tbreak;\n\t// \t\t}\n\t// \t}\n\t// }\n\n\tif (dataPopulator !== null) {\n\t\tfor (var key in dataPopulator) {\n\t\t\tif (dataPopulator.hasOwnProperty(key)) {\n\t\t\t\tlet firstProp = dataPopulator[key];\n\t\t\t\tlet listItems = Object.keys(firstProp.properties);\n\t\t\t\t// let listValue = Object.values(firstProp.properties);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t//Getting the values from the feature and defining color ranges\n\tlet columnName = props.userSelectedItems;\n\t// console.log(columnName, 'colname');\n\tlet columnValues = dataPopulator.map((f) => f.properties[columnName]);\n\tlet legendValues = d3.extent(columnValues);\n\t//Linear breaks\n\tlet colorScale = d3.scaleLinear().domain(d3.extent(columnValues)).range([ \"coral\", \"blue\" ]);\n\t//Quant Breaks\n\tlet colorScaleQuant = d3\n\t\t.scaleQuantize()\n\t\t.domain([ 20, 200, 400, 800 ])\n\t\t.range([ \"coral\", \"green\", \"blue\", \"yellow\", \"blue\" ]);\n\n\tfunction getColor (d){\n\t\tvar color;\n\t\tif (d === 5) {\n\t\t\tcolor = \"#800026\";\n\t\t} else if (d === 4) {\n\t\t\tcolor = \"#BD0026\";\n\t\t} else if (d === 3) {\n\t\t\tcolor = \"#E31A1C\";\n\t\t} else if (d === 2) {\n\t\t\tcolor = \"#FC4E2A\";\n\t\t} else if (d === 1) {\n\t\t\tcolor = \"#FD8D3C\";\n\t\t} else color = \"#FEB24C\";\n\t\treturn color;\n\t}\n\n\t//Coloring each feature based on the user selected values from the list selector\n\tfunction styles (feature){\n\t\treturn {\n\t\t\tfillColor: getColor(feature.properties[columnName]),\n\n\t\t\tweight: 0,\n\t\t\topacity: 1,\n\t\t\tcolor: \"white\",\n\t\t\tdashArray: \"3\",\n\t\t\tfillOpacity: 1\n\t\t};\n\t}\n\n\t//Leaflet Components\n\tconst { BaseLayer, Overlay } = LayersControl;\n\n\t//Map center on load\n\tconst center = [ 41.8781, -87.6298 ];\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (geojson.current) {\n\t\t\t\tgeojson.current.leafletElement.eachLayer(function (layer){\n\t\t\t\t\tlayer.bindPopup(`${columnName} : ${layer.feature.properties[columnName]}`);\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t[ columnName ]\n\t);\n\n\t// WIP Section end ____________________________________\n\n\treturn (\n\t\t<Map\n\t\t\tattributionControl={false}\n\t\t\tcenter={center}\n\t\t\tzoom={10}\n\t\t\tstyle={{ height: \"100%\", width: \"100%\" }}>\n\t\t\t<TileLayer url='https://api.mapbox.com/styles/v1/aradnia/ckfcn7zq20mfb19mswcdnhd6u/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiYXJhZG5pYSIsImEiOiJjanlhZDdienQwNGN0M212MHp3Z21mMXhvIn0.lPiKb_x0vr1H62G_jHgf7w' />\n\n\t\t\t<GeoJSON ref={geojson} data={props.dataProps} style={styles} />\n\n\t\t\t<Legend extentProps={legendValues} />\n\t\t</Map>\n\t);\n}\nexport default Mainmap;\n","/* eslint-disable no-unreachable */\nimport React, { useState, useEffect, useRef } from \"react\";\n\nimport { Map, GeoJSON, TileLayer, LayersControl } from \"react-leaflet\";\nimport FeatureName from \"./Legend\";\nimport HighlightedGeoJson from \"./HighlightedGeoJson\";\nimport * as ss from \"simple-statistics\";\nimport * as d3 from \"d3\";\nimport L from \"leaflet\";\nimport Legend from \"./Legend\";\n\nfunction PreviewMap (props){\n\t//getting the first object from geojson to extract column names\n\n\tlet dataPopulator = props.dataProps.features;\n\tconst geojson = useRef();\n\tconst legend = useRef(null);\n\tconst map = useRef();\n\tconst featureName = useRef(null);\n\n\tif (dataPopulator !== null) {\n\t\tfor (var key in dataPopulator) {\n\t\t\tif (dataPopulator.hasOwnProperty(key)) {\n\t\t\t\tlet firstProp = dataPopulator[key];\n\t\t\t\tlet listItems = Object.keys(firstProp.properties);\n\n\t\t\t\t// let listValue = Object.values(firstProp.properties);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t//Getting the values from the feature and defining color ranges\n\tlet columnName = props.userSelectedItems;\n\tlet columnNameClean = columnName.replace(/_/g, \" \");\n\n\tlet columnValues = dataPopulator.map((f) => f.properties[columnName]);\n\tlet type = typeof columnValues[0];\n\tlet breaks;\n\tlet colorScale;\n\tif (type !== \"string\") {\n\t\tlet colorsBrewer = [\n\t\t\t\"#f6eff7\",\n\t\t\t\"#d0d1e6\",\n\t\t\t\"#a6bddb\",\n\t\t\t\"#67a9cf\",\n\t\t\t\"#3690c0\",\n\t\t\t\"#02818a\",\n\t\t\t\"#016450\"\n\t\t];\n\t\tlet groups = ss.ckmeans(columnValues, 7);\n\t\tbreaks = groups.map((cluster) => {\n\t\t\treturn cluster[0];\n\t\t});\n\n\t\t//Quant Breaks\n\t\tcolorScale = d3.scaleQuantile().domain(breaks).range(colorsBrewer);\n\t} else {\n\t\tbreaks = new Set(columnValues);\n\t\tcolorScale = d3.scaleOrdinal().domain(breaks).range(d3.schemeCategory10);\n\t}\n\n\t// let extent = d3.extent(columnValues);\n\t// //Linear breaks\n\t// let colorScale = d3.scaleLinear().domain(d3.extent(columnValues)).range([ \"coral\", \"blue\" ]);\n\t// let colorScaleCategorical = d3\n\t// \t.scaleLinear()\n\t// \t.domain(d3.extent(columnValues))\n\t// \t.range([ \"coral\", \"blue\" ]);\n\n\t//Coloring each feature based on the user selected values from the list selector\n\tfunction styles (feature){\n\t\treturn {\n\t\t\tfillColor: colorScale(feature.properties[columnName]),\n\n\t\t\tweight: 0,\n\t\t\topacity: 1,\n\t\t\tcolor: \"white\",\n\t\t\tdashArray: \"3\",\n\t\t\tfillOpacity: 1\n\t\t};\n\t}\n\n\t//Leaflet Components\n\tconst { BaseLayer, Overlay } = LayersControl;\n\n\t//Map center on load\n\tconst center = [ 41.8781, -87.6298 ];\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (geojson.current) {\n\t\t\t\tgeojson.current.leafletElement.eachLayer(function (layer){\n\t\t\t\t\t// console.log(layer);\n\t\t\t\t\tlayer.bindPopup(`${columnName} : ${layer.feature.properties[columnName]}`);\n\t\t\t\t});\n\t\t\t\t// map.current.leafletElement.eachLayer((layer) => {\n\t\t\t\t// \tconsole.log(layer);\n\t\t\t\t// });\n\t\t\t\tif (legend.current !== null) {\n\t\t\t\t\tmap.current.leafletElement.removeControl(legend.current);\n\t\t\t\t}\n\t\t\t\tif (featureName.current !== null) {\n\t\t\t\t\tmap.current.leafletElement.removeControl(featureName.current);\n\t\t\t\t}\n\n\t\t\t\tlegend.current = L.control({ position: \"topright\" });\n\t\t\t\tfeatureName.current = L.control({ position: \"topright\" });\n\n\t\t\t\tfeatureName.current.onAdd = () => {\n\t\t\t\t\tconst div = L.DomUtil.create(\"div\", \"info titleMap\");\n\t\t\t\t\tdiv.innerHTML = `<p> ${columnNameClean}</p>`;\n\t\t\t\t\treturn div;\n\t\t\t\t};\n\n\t\t\t\tlegend.current.onAdd = () => {\n\t\t\t\t\tconst div = L.DomUtil.create(\"div\", \"info legend\");\n\t\t\t\t\t// const grades = [\n\t\t\t\t\t// \tthis.props.extentProps,\n\t\t\t\t\t// \tthis.props.extentProps,\n\t\t\t\t\t// \tthis.props.extentProps\n\t\t\t\t\t// ];\n\t\t\t\t\tlet labels = [];\n\t\t\t\t\tlet from;\n\t\t\t\t\tlet to;\n\t\t\t\t\tbreaks = Array.from(breaks);\n\t\t\t\t\tlet breaksCopy = Array.from(breaks).slice(0, 7);\n\t\t\t\t\tif (breaks > 7 && type === \"string\") {\n\t\t\t\t\t\tbreaksCopy.push(\"Others...\");\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i = 0; i < breaksCopy.length; i++) {\n\t\t\t\t\t\tif (type === \"number\") {\n\t\t\t\t\t\t\tlet isinteger = breaksCopy[i] % 1 === 0;\n\t\t\t\t\t\t\tfrom =\n\t\t\t\t\t\t\t\tisinteger ? breaksCopy[i] :\n\t\t\t\t\t\t\t\tbreaks[i].toFixed(2);\n\t\t\t\t\t\t\tto =\n\t\t\t\t\t\t\t\tbreaksCopy[i + 1] ? isinteger ? breaksCopy[i + 1] :\n\t\t\t\t\t\t\t\tbreaksCopy[i + 1].toFixed(2) :\n\t\t\t\t\t\t\t\tbreaksCopy[i + 1];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.log(breaksCopy);\n\t\t\t\t\t\t\tfrom =\n\n\t\t\t\t\t\t\t\t\tbreaksCopy[i].length > 20 ? `${breaksCopy[i].slice(0, 20)}...` :\n\t\t\t\t\t\t\t\t\tbreaksCopy[i];\n\t\t\t\t\t\t\tto = undefined;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlabels.push(\n\t\t\t\t\t\t\t'<i style=\"background:' +\n\t\t\t\t\t\t\t\tcolorScale(breaksCopy[i]) +\n\t\t\t\t\t\t\t\t'\"></i> ' +\n\t\t\t\t\t\t\t\tfrom +\n\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\tto ? \" &ndash; \" + to :\n\t\t\t\t\t\t\t\t\ttype !== \"string\" ? \"+\" :\n\t\t\t\t\t\t\t\t\t\"\")\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tdiv.innerHTML = labels.join(\"<br>\");\n\t\t\t\t\treturn div;\n\t\t\t\t};\n\t\t\t\tfeatureName.current.addTo(map.current.leafletElement);\n\t\t\t\tlegend.current.addTo(map.current.leafletElement);\n\t\t\t}\n\t\t},\n\t\t[ columnName ]\n\t);\n\n\t// WIP Section end ____________________________________\n\n\treturn (\n\t\t<Map\n\t\t\tattributionControl={false}\n\t\t\tref={map}\n\t\t\tcenter={center}\n\t\t\tzoom={10}\n\t\t\tstyle={{ height: \"100%\", width: \"100%\" }}>\n\t\t\t<TileLayer url='https://api.mapbox.com/styles/v1/aradnia/ckfcn7zq20mfb19mswcdnhd6u/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiYXJhZG5pYSIsImEiOiJjanlhZDdienQwNGN0M212MHp3Z21mMXhvIn0.lPiKb_x0vr1H62G_jHgf7w' />\n\n\t\t\t<GeoJSON ref={geojson} data={props.dataProps} style={styles} />\n\t\t</Map>\n\t);\n}\nexport default PreviewMap;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Icon from \"@material-ui/core/Icon\";\n\nconst useStyles = makeStyles((theme) => ({\n\tbutton: {\n\t\tmargin: theme.spacing(1)\n\t}\n}));\n\nexport default function Runbutton (props){\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div>\n\t\t\t{/* This Button uses a Font Icon, see the installation instructions in the Icon component docs. */}\n\t\t\t<Button\n\t\t\t\tonClick={props.propsOnClick}\n\t\t\t\tvariant='contained'\n\t\t\t\tcolor='primary'\n\t\t\t\tclassName={classes.button}\n\t\t\t\tendIcon={<Icon>send</Icon>}>\n\t\t\t\tRun\n\t\t\t</Button>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport RunButton from \"../Interface/RunButton\";\nconst useStyles = makeStyles((theme) => ({\n\tformControl: {\n\t\tmargin: theme.spacing(1),\n\t\tminWidth: \"40%\"\n\t},\n\tselectEmpty: {\n\t\tmarginTop: theme.spacing(1)\n\t}\n}));\n\nexport default function SimpleSelect (props){\n\tconst classes = useStyles();\n\tconst [ cluster, setCluster ] = React.useState(\"\");\n\n\tconst handleChange = (event) => {\n\t\tsetCluster(event.target.value);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Grid container direction='row' alignItems='center' justify='center'>\n\t\t\t\t<FormControl className={classes.formControl}>\n\t\t\t\t\t{/* <InputLabel shrink id='demo-simple-select-placeholder-label-label'>\n\t\t\t\t\t\tClusters\n\t\t\t\t\t</InputLabel> */}\n\t\t\t\t\t<Select\n\t\t\t\t\t\tlabelId='demo-simple-select-placeholder-label-label'\n\t\t\t\t\t\tid='demo-simple-select-placeholder-label'\n\t\t\t\t\t\tvalue={cluster}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tdisplayEmpty\n\t\t\t\t\t\tclassName={classes.selectEmpty}>\n\t\t\t\t\t\t<MenuItem value=''>\n\t\t\t\t\t\t\t<em>Select...</em>\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t<MenuItem value={1}> 1 </MenuItem>\n\t\t\t\t\t\t<MenuItem value={2}> 2 </MenuItem>\n\t\t\t\t\t\t<MenuItem value={3}> 3</MenuItem>\n\t\t\t\t\t\t<MenuItem value={4}> 4 </MenuItem>\n\t\t\t\t\t\t<MenuItem value={5}> 5 </MenuItem>\n\t\t\t\t\t\t<MenuItem value={6}> 6 </MenuItem>\n\t\t\t\t\t</Select>\n\t\t\t\t\t{/* <FormHelperText>Choose number of Clusters</FormHelperText> */}\n\t\t\t\t</FormControl>\n\t\t\t\t<RunButton\n\t\t\t\t\tpropsOnClick={() => {\n\t\t\t\t\t\tprops.handleSubmit(props.userFeatures, cluster);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</div>\n\t);\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport List from \"@material-ui/core/List\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport HelpIcon from \"@material-ui/icons/Help\";\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nimport MLSetup from \"./MLSetup\";\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tmargin: \"2px\",\n\t\tpadding: \"5px\",\n\t\tfontSize: \"0.4rem\"\n\t},\n\tcardHeader: {\n\t\tpadding: theme.spacing(1, 2)\n\t},\n\tlist: {\n\t\twidth: 280,\n\t\theight: \"200px\",\n\t\tbackgroundColor: theme.palette.background.paper,\n\t\toverflow: \"auto\",\n\t\ttextTransform: \"capitalize\"\n\t},\n\tMuiTypography: {\n\t\tfontSize: \"0.1rem\"\n\t},\n\tbutton: {\n\t\tmargin: theme.spacing(1, 1)\n\t},\n\tMuiListItem: {\n\t\tpadding: \"0px\",\n\t\tmargin: 0\n\t}\n}));\n\nfunction not (a, b){\n\treturn a.filter((value) => b.indexOf(value) === -1);\n}\n\nfunction intersection (a, b){\n\treturn a.filter((value) => b.indexOf(value) !== -1);\n}\n\nfunction union (a, b){\n\treturn [ ...a, ...not(b, a) ];\n}\n\nexport default function TransferList (props){\n\tvar listItems;\n\n\t//getting the first object from geojson to extract column names\n\n\tlet dataPopulator = props.dataProps.features;\n\n\tif (dataPopulator !== null) {\n\t\tfor (var key in dataPopulator) {\n\t\t\tif (dataPopulator.hasOwnProperty(key)) {\n\t\t\t\tlet firstProp = dataPopulator[key];\n\t\t\t\tlistItems = Object.keys(firstProp.properties);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t//Replacing _ with space for better display\n\tlet listItemsCleaned = listItems.map((item) => item.replace(/_/g, \" \"));\n\n\tconst classes = useStyles();\n\tconst [ checked, setChecked ] = React.useState([]);\n\tconst [ preview, setPreview ] = React.useState();\n\tconsole.log(preview, \"preview\");\n\tconst [ left, setLeft ] = React.useState(listItemsCleaned.reverse());\n\tconst [ right, setRight ] = React.useState([]);\n\n\tconst leftChecked = intersection(checked, left);\n\tconst rightChecked = intersection(checked, right);\n\n\t//\n\t//Passing  selected features to parent component using props\n\tprops.featureProps(right);\n\n\tconst handleToggle = (value) => () => {\n\t\tconst currentIndex = checked.indexOf(value);\n\t\tconst newChecked = [ ...checked ];\n\n\t\tif (currentIndex === -1) {\n\t\t\tlet fakeValue = value.replace(/ /g, \"_\");\n\t\t\t// Passing prettified feature names to be displayed in the list\n\n\t\t\tnewChecked.push(value);\n\t\t} else {\n\t\t\tnewChecked.splice(currentIndex, 1);\n\t\t}\n\n\t\tsetChecked(newChecked);\n\t};\n\n\tconst handleTogglePreview = (value) => () => {\n\t\tconst currentIndex = checked.indexOf(value);\n\t\tconst newChecked = [ ...checked ];\n\n\t\tif (currentIndex === -1) {\n\t\t\tlet fakeValue = value.replace(/ /g, \"_\");\n\t\t\t// Passing prettified feature names to be displayed in the list\n\t\t\tprops.methodProps(fakeValue);\n\n\t\t\t// newChecked.push(value);\n\t\t} else {\n\t\t\tnewChecked.splice(currentIndex, 1);\n\t\t}\n\t\tsetPreview(value);\n\t};\n\n\tconst handleToggleSelected = (value) => () => {\n\t\tconst currentIndex = checked.indexOf(value);\n\t\tconst newChecked = [ ...checked ];\n\n\t\tif (currentIndex === -1) {\n\t\t\tnewChecked.push(value);\n\t\t} else {\n\t\t\tnewChecked.splice(currentIndex, 1);\n\t\t}\n\n\t\tsetChecked(newChecked);\n\t};\n\n\tconst numberOfChecked = (items) => intersection(checked, items).length;\n\n\tconst handleToggleAll = (items) => () => {\n\t\tif (numberOfChecked(items) === items.length) {\n\t\t\tsetChecked(not(checked, items));\n\t\t} else {\n\t\t\tsetChecked(union(checked, items));\n\t\t}\n\t};\n\n\tconst handleCheckedRight = () => {\n\t\tsetRight(right.concat(leftChecked));\n\t\tsetLeft(not(left, leftChecked));\n\t\tsetChecked(not(checked, leftChecked));\n\t};\n\n\tconst handleCheckedLeft = () => {\n\t\tsetLeft(left.concat(rightChecked));\n\t\tsetRight(not(right, rightChecked));\n\t\tsetChecked(not(checked, rightChecked));\n\t};\n\n\tconst customList = (title, items) => (\n\t\t<Card>\n\t\t\t<CardHeader\n\t\t\t\tclassName={classes.cardHeader}\n\t\t\t\tavatar={\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\tfontSize='small'\n\t\t\t\t\t\t\tonClick={handleToggleAll(items)}\n\t\t\t\t\t\t\tchecked={numberOfChecked(items) === items.length && items.length !== 0}\n\t\t\t\t\t\t\tindeterminate={\n\t\t\t\t\t\t\t\tnumberOfChecked(items) !== items.length &&\n\t\t\t\t\t\t\t\tnumberOfChecked(items) !== 0\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdisabled={items.length === 0}\n\t\t\t\t\t\t\tinputProps={{ \"aria-label\": \"all items selected\" }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\ttitle={title}\n\t\t\t\tsubheader={`${numberOfChecked(items)}/${items.length} selected`}>\n\t\t\t\t<Tooltip title={\"Hover over each section to learn about how they work\"}>\n\t\t\t\t\t<HelpIcon />\n\t\t\t\t</Tooltip>\n\t\t\t</CardHeader>\n\t\t\t<Divider />\n\t\t\t<List className={classes.list} dense={true} component='div' role='list'>\n\t\t\t\t{items.map((value) => {\n\t\t\t\t\tconst labelId = `transfer-list-all-item-${value}-label`;\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ListItem key={value} role='listitem' button disableRipple='true'>\n\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\tfontSize='small'\n\t\t\t\t\t\t\t\tonClick={handleToggle(value)}\n\t\t\t\t\t\t\t\tchecked={checked.indexOf(value) !== -1}\n\t\t\t\t\t\t\t\ttabIndex={-1}\n\t\t\t\t\t\t\t\tdisableRipple\n\t\t\t\t\t\t\t\tinputProps={{ \"aria-labelledby\": labelId }}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t{/* preview stuff */}\n\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\ticon={<VisibilityOffIcon fontSize='small' />}\n\t\t\t\t\t\t\t\tcheckedIcon={<VisibilityIcon fontSize='small' />}\n\t\t\t\t\t\t\t\tonClick={handleTogglePreview(value)}\n\t\t\t\t\t\t\t\tchecked={value === preview}\n\t\t\t\t\t\t\t\ttabIndex={-1}\n\t\t\t\t\t\t\t\tdisableRipple\n\t\t\t\t\t\t\t\tinputProps={{ \"aria-labelledby\": labelId }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<ListItemText id={labelId} primary={`${value}`} />\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t\t<ListItem />\n\t\t\t</List>\n\t\t</Card>\n\t);\n\tconst customListSelected = (title, items) => (\n\t\t<Card>\n\t\t\t<CardHeader\n\t\t\t\tclassName={classes.cardHeader}\n\t\t\t\tavatar={\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tfontSize='small'\n\t\t\t\t\t\tonClick={handleToggleAll(items)}\n\t\t\t\t\t\tchecked={numberOfChecked(items) === items.length && items.length !== 0}\n\t\t\t\t\t\tindeterminate={\n\t\t\t\t\t\t\tnumberOfChecked(items) !== items.length && numberOfChecked(items) !== 0\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdisabled={items.length === 0}\n\t\t\t\t\t\tinputProps={{ \"aria-label\": \"all items selected\" }}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\ttitle={title}\n\t\t\t\tsubheader={`${numberOfChecked(items)}/${items.length} selected`}\n\t\t\t/>\n\t\t\t<Divider />\n\t\t\t<List className={classes.list} dense={true} component='div' role='list'>\n\t\t\t\t{items.map((value) => {\n\t\t\t\t\tconst labelId = `transfer-list-all-item-${value}-label`;\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\tspacing={0}\n\t\t\t\t\t\t\tkey={value}\n\t\t\t\t\t\t\trole='listitem'\n\t\t\t\t\t\t\tbutton\n\t\t\t\t\t\t\tonClick={handleToggleSelected(value)}>\n\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\tchecked={checked.indexOf(value) !== -1}\n\t\t\t\t\t\t\t\ttabIndex={-1}\n\t\t\t\t\t\t\t\tdisableRipple\n\t\t\t\t\t\t\t\tinputProps={{ \"aria-labelledby\": labelId }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{/* preview stuff */}\n\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\ticon={<VisibilityOffIcon fontSize='small' />}\n\t\t\t\t\t\t\t\tcheckedIcon={<VisibilityIcon fontSize='small' />}\n\t\t\t\t\t\t\t\tonClick={handleTogglePreview(value)}\n\t\t\t\t\t\t\t\tchecked={value === preview}\n\t\t\t\t\t\t\t\ttabIndex={-1}\n\t\t\t\t\t\t\t\tdisableRipple\n\t\t\t\t\t\t\t\tinputProps={{ \"aria-labelledby\": labelId }}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<ListItemText id={labelId} primary={`${value}`} />\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t\t<ListItem />\n\t\t\t</List>\n\t\t</Card>\n\t);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t\tspacing={0}\n\t\t\t\tdirection='column'\n\t\t\t\tjustify='space-evenly'\n\t\t\t\talignItems='center'\n\t\t\t\tclassName={classes.root}>\n\t\t\t\t<Grid item>{customList(\"Features\", left)}</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Grid container direction='row' alignItems='center'>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\tonClick={handleCheckedRight}\n\t\t\t\t\t\t\tdisabled={leftChecked.length === 0}\n\t\t\t\t\t\t\taria-label='move selected right'>\n\t\t\t\t\t\t\t<ExpandMoreIcon />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\tonClick={handleCheckedLeft}\n\t\t\t\t\t\t\tdisabled={rightChecked.length === 0}\n\t\t\t\t\t\t\taria-label='move selected left'>\n\t\t\t\t\t\t\t<ExpandLessIcon />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>{customListSelected(\"Selected Features\", right)}</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Typography variant='overline' className={classes.title}>\n\t\t\t\t\t\tNumber of Clusters\n\t\t\t\t\t\t<Tooltip title={\"Hover over each section to learn about how they work\"}>\n\t\t\t\t\t\t\t<InfoOutlinedIcon style={{ marginTop: \"3px\" }} fontSize='small' />\n\t\t\t\t\t\t</Tooltip>{\" \"}\n\t\t\t\t\t</Typography>{\" \"}\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</React.Fragment>\n\t);\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n\nfunction a11yProps (index){\n\treturn {\n\t\tid: `scrollable-auto-tab-${index}`,\n\t\t\"aria-controls\": `scrollable-auto-tabpanel-${index}`\n\t};\n}\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: \"100%\",\n\t\theight: \"100%\"\n\t}\n}));\n\nexport default function Synthesizer (){\n\tconst [ value, setValue ] = React.useState(0);\n\n\tconst handleChange = (event, newValue) => {\n\t\tsetValue(newValue);\n\t};\n\n\treturn (\n\t\t<AppBar position='static' color='red'>\n\t\t\t<Tabs\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={handleChange}\n\t\t\t\tindicatorColor='primary'\n\t\t\t\ttextColor='primary'\n\t\t\t\tvariant='scrollable'\n\t\t\t\tscrollButtons='auto'\n\t\t\t\taria-label='scrollable auto tabs example'>\n\t\t\t\t<Tab label='Iteration One' {...a11yProps(0)} />\n\t\t\t\t<Tab label='Iteration Two' {...a11yProps(1)} />\n\t\t\t\t<Tab label='Iteration Three' {...a11yProps(2)} />\n\t\t\t\t<Tab label='Iteration Four' {...a11yProps(3)} />\n\t\t\t\t<Tab label='Iteration Five' {...a11yProps(4)} />\n\t\t\t\t<Tab label='Iteration Six' {...a11yProps(5)} />\n\t\t\t\t<Tab label='Iteration Seven' {...a11yProps(6)} />\n\t\t\t</Tabs>\n\t\t</AppBar>\n\t);\n}\n","import React from 'react';\nimport Switch from '@material-ui/core/Switch';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nexport default function Toggle (props){\n\treturn (\n\t\t<FormGroup style={{ marginLeft: '15px' }}>\n\t\t\t<FormControlLabel\n\t\t\t\tstyle={{ textTransform: 'none' }}\n\t\t\t\tcontrol={\n\t\t\t\t\t<Switch size='small' checked={props.checkedMain} onChange={props.toggleProps} />\n\t\t\t\t}\n\t\t\t\tlabel='Table View / Visualization '\n\t\t\t/>\n\t\t</FormGroup>\n\t);\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tdisplay: 'flex',\n\t\t'& > * + *': {\n\t\t\tmarginLeft: theme.spacing(10)\n\t\t}\n\t}\n}));\n\nexport default function CircularIndeterminate(){\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<CircularProgress />\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\n\nconst useStyles = makeStyles((theme) => ({\n\tgrow: {\n\t\tflexGrow: 1\n\t},\n\tmenuButton: {\n\t\tmarginRight: theme.spacing(2)\n\t},\n\ttitle: {\n\t\tdisplay: 'none',\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\tdisplay: 'block'\n\t\t}\n\t},\n\tsearch: {\n\t\tposition: 'relative',\n\t\tborderRadius: theme.shape.borderRadius,\n\t\tbackgroundColor: fade(theme.palette.common.white, 0.15),\n\t\t'&:hover': {\n\t\t\tbackgroundColor: fade(theme.palette.common.white, 0.25)\n\t\t},\n\t\tmarginRight: theme.spacing(2),\n\t\tmarginLeft: 0,\n\t\twidth: '100%',\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\tmarginLeft: theme.spacing(3),\n\t\t\twidth: 'auto'\n\t\t}\n\t},\n\tsearchIcon: {\n\t\tpadding: theme.spacing(0, 2),\n\t\theight: '100%',\n\t\tposition: 'absolute',\n\t\tpointerEvents: 'none',\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center'\n\t},\n\tinputRoot: {\n\t\tcolor: 'inherit'\n\t},\n\tinputInput: {\n\t\tpadding: theme.spacing(1, 1, 1, 0),\n\t\t// vertical padding + font size from searchIcon\n\t\tpaddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n\t\ttransition: theme.transitions.create('width'),\n\t\twidth: '100%',\n\t\t[theme.breakpoints.up('md')]: {\n\t\t\twidth: '20ch'\n\t\t}\n\t},\n\tsectionDesktop: {\n\t\tdisplay: 'none',\n\t\t[theme.breakpoints.up('md')]: {\n\t\t\tdisplay: 'flex'\n\t\t}\n\t},\n\tsectionMobile: {\n\t\tdisplay: 'flex',\n\t\t[theme.breakpoints.up('md')]: {\n\t\t\tdisplay: 'none'\n\t\t}\n\t}\n}));\n\nexport default function PrimarySearchAppBar(){\n\tconst classes = useStyles();\n\tconst [ anchorEl, setAnchorEl ] = React.useState(null);\n\tconst [ mobileMoreAnchorEl, setMobileMoreAnchorEl ] = React.useState(null);\n\n\tconst isMenuOpen = Boolean(anchorEl);\n\tconst isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n\tconst handleProfileMenuOpen = (event) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleMobileMenuClose = () => {\n\t\tsetMobileMoreAnchorEl(null);\n\t};\n\n\tconst handleMenuClose = () => {\n\t\tsetAnchorEl(null);\n\t\thandleMobileMenuClose();\n\t};\n\n\tconst handleMobileMenuOpen = (event) => {\n\t\tsetMobileMoreAnchorEl(event.currentTarget);\n\t};\n\n\tconst menuId = 'primary-search-account-menu';\n\tconst renderMenu = (\n\t\t<Menu\n\t\t\tanchorEl={anchorEl}\n\t\t\tanchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n\t\t\tid={menuId}\n\t\t\tkeepMounted\n\t\t\ttransformOrigin={{ vertical: 'top', horizontal: 'right' }}\n\t\t\topen={isMenuOpen}\n\t\t\tonClose={handleMenuClose}\n\t\t>\n\t\t\t<MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n\t\t\t<MenuItem onClick={handleMenuClose}>My account</MenuItem>\n\t\t</Menu>\n\t);\n\n\tconst mobileMenuId = 'primary-search-account-menu-mobile';\n\tconst renderMobileMenu = (\n\t\t<Menu\n\t\t\tanchorEl={mobileMoreAnchorEl}\n\t\t\tanchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n\t\t\tid={mobileMenuId}\n\t\t\tkeepMounted\n\t\t\ttransformOrigin={{ vertical: 'top', horizontal: 'right' }}\n\t\t\topen={isMobileMenuOpen}\n\t\t\tonClose={handleMobileMenuClose}\n\t\t>\n\t\t\t<MenuItem>\n\t\t\t\t<IconButton aria-label='show 4 new mails' color='inherit'>\n\t\t\t\t\t<Badge badgeContent={4} color='secondary'>\n\t\t\t\t\t\t<MailIcon />\n\t\t\t\t\t</Badge>\n\t\t\t\t</IconButton>\n\t\t\t\t<p>Messages</p>\n\t\t\t</MenuItem>\n\t\t\t<MenuItem>\n\t\t\t\t<IconButton aria-label='show 11 new notifications' color='inherit'>\n\t\t\t\t\t<Badge badgeContent={11} color='secondary'>\n\t\t\t\t\t\t<NotificationsIcon />\n\t\t\t\t\t</Badge>\n\t\t\t\t</IconButton>\n\t\t\t\t<p>Notifications</p>\n\t\t\t</MenuItem>\n\t\t\t<MenuItem onClick={handleProfileMenuOpen}>\n\t\t\t\t<IconButton\n\t\t\t\t\taria-label='account of current user'\n\t\t\t\t\taria-controls='primary-search-account-menu'\n\t\t\t\t\taria-haspopup='true'\n\t\t\t\t\tcolor='inherit'\n\t\t\t\t>\n\t\t\t\t\t<AccountCircle />\n\t\t\t\t</IconButton>\n\t\t\t\t<p>Profile</p>\n\t\t\t</MenuItem>\n\t\t</Menu>\n\t);\n\n\treturn (\n\t\t<div className={classes.grow}>\n\t\t\t<AppBar position='static' color='#f4f4f4'>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tedge='start'\n\t\t\t\t\t\tclassName={classes.menuButton}\n\t\t\t\t\t\tcolor='inherit'\n\t\t\t\t\t\taria-label='open drawer'\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<Typography className={classes.title} variant='h6' noWrap>\n\t\t\t\t\t\tMed / Loc\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<div className={classes.search}>\n\t\t\t\t\t\t<div className={classes.searchIcon}>\n\t\t\t\t\t\t\t<SearchIcon />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<InputBase\n\t\t\t\t\t\t\tplaceholder='Search…'\n\t\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\t\troot: classes.inputRoot,\n\t\t\t\t\t\t\t\tinput: classes.inputInput\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tinputProps={{ 'aria-label': 'search' }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={classes.grow} />\n\t\t\t\t\t<div className={classes.sectionDesktop}>\n\t\t\t\t\t\t<IconButton aria-label='show 4 new mails' color='inherit'>\n\t\t\t\t\t\t\t<Badge badgeContent={4} color='secondary'>\n\t\t\t\t\t\t\t\t<MailIcon />\n\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t<IconButton aria-label='show 17 new notifications' color='inherit'>\n\t\t\t\t\t\t\t<Badge badgeContent={17} color='secondary'>\n\t\t\t\t\t\t\t\t<NotificationsIcon />\n\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tedge='end'\n\t\t\t\t\t\t\taria-label='account of current user'\n\t\t\t\t\t\t\taria-controls={menuId}\n\t\t\t\t\t\t\taria-haspopup='true'\n\t\t\t\t\t\t\tonClick={handleProfileMenuOpen}\n\t\t\t\t\t\t\tcolor='inherit'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<AccountCircle />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={classes.sectionMobile}>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\taria-label='show more'\n\t\t\t\t\t\t\taria-controls={mobileMenuId}\n\t\t\t\t\t\t\taria-haspopup='true'\n\t\t\t\t\t\t\tonClick={handleMobileMenuOpen}\n\t\t\t\t\t\t\tcolor='inherit'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<MoreIcon />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</div>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t\t{renderMobileMenu}\n\t\t\t{renderMenu}\n\t\t</div>\n\t);\n}\n","// Libraries import\n\nimport React, { useEffect, useState, useRef } from \"react\";\n\nimport axios from \"axios\";\nimport \"../styles/dashStyle.css\";\n\n// ____________________________________ Imports ____________________________________\n\n//Data\nimport WorldTable from \"./Data/WorldTable\";\n\n//Visualizations\nimport PieViz from \"./Data/PieViz\";\nimport BoxPlot from \"./Data/Boxplot\";\nimport Viz from \"./Data/Viz\";\n\n// Maps\nimport Mainmap from \"./Maps/Mainmap\";\nimport PreviewMap from \"./Maps/PreviewMap\";\n\n// Feature\nimport ListSelector from \"./Controls/ListSelector\";\nimport Synthesizer from \"./Controls/Synthesizer\";\nimport MLSetup from \"./Controls/MLSetup\";\n\n// UI\nimport Toggle from \"./Interface/Toggle\";\nimport Loading from \"./Loading\";\nimport Navbar from \"./Interface/Navbar\";\n\n// ____________________________________APP____________________________________\n\nfunction DashApp (){\n\t// To Do : useMemo hook for improving performance for the functions that are heavy\n\tconst stageCanvasRef = useRef(null);\n\tconst [ divHeight, setDivHeight ] = useState(\"200px\");\n\n\tuseEffect(() => {\n\t\t// The 'current' property contains info of the reference:\n\t\t// align, title, ... , width, height, etc.\n\t\tif (stageCanvasRef.current) {\n\t\t\tsetDivHeight(stageCanvasRef.current.offsetHeight);\n\t\t\t// let width  = stageCanvasRef.current.offsetWidth;\n\t\t}\n\t});\n\n\t//Fetching data\n\tconst fetchUrl =\n\t\t\"https://raw.githubusercontent.com/AhmadzadehSanaz/Studio-Lab-Healthcare-Ellinger/main/Data%20Pipeline/hexagon_collection_master.geojson\";\n\n\tconst [ data, setData ] = useState(null);\n\n\tasync function getData (){\n\t\taxios\n\t\t\t.get(fetchUrl)\n\t\t\t.then((res) => {\n\t\t\t\tsetData(res.data);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err.message);\n\t\t\t});\n\t}\n\tuseEffect(() => {\n\t\tgetData();\n\t}, []);\n\n\t// State for getting user selected feature which will be passed to maps\n\tconst [ userSelected, setUserSelected ] = useState(\"Preview_Map\");\n\tconsole.log(userSelected, \"mamad\");\n\n\t// state for maps\n\tconst [ userClicked, setUserClicked ] = useState(false);\n\n\t// state for toggle between table and viz\n\tconst [ checkedMain, setCheckedMain ] = React.useState(false);\n\tconst toggleCheckedMain = () => {\n\t\tsetCheckedMain((prev) => !prev);\n\t};\n\n\t// Sate for getting features user selected for running the model\n\tconst [ userFeatures, setUserFeatures ] = useState(null);\n\n\t// State for submit\n\n\tconst [ userSubmit, setUserSubmit ] = useState(false);\n\tconst toggleSubmit = () => {\n\t\tsetUserSubmit((prev) => !prev);\n\t};\n\n\t// Sending POST request to ML API using axios\n\n\tconst handleSubmit = (clusterNum, Features) => {\n\t\tlet mlApiUrl = \"http://medloc-api.herokuapp.com/get_cluster\";\n\t\t// replacing space with _ for sending to serve\n\t\tlet featuresToAPI = Features.map((item) => item.replace(/ /g, \"_\"));\n\t\tlet mlRequest = {\n\t\t\t\"selected features\": featuresToAPI,\n\t\t\t\"number of clusters\": clusterNum\n\t\t};\n\t\tconsole.log(mlRequest);\n\t\taxios\n\t\t\t.post(mlApiUrl, JSON.stringify(mlRequest), {\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(function (response){\n\t\t\t\tconsole.log(response);\n\t\t\t})\n\t\t\t.catch(function (error){\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t{\n\t\t\t\tdata !== null ? <div class='containerDash'>\n\t\t\t\t\t{/* ------------------ NavBar ------------------*/}\n\t\t\t\t\t<nav className='navDash generalComp'>\n\t\t\t\t\t\t<Navbar />\n\t\t\t\t\t</nav>\n\n\t\t\t\t\t{/*  ------------------Map History Browser ------------------  */}\n\t\t\t\t\t<div className='mainDash generalComp'>\n\t\t\t\t\t\t<Synthesizer />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/*  ------------------ Data Selector ------------------ */}\n\n\t\t\t\t\t<div className='sidebarDash generalComp'>\n\t\t\t\t\t\t<ListSelector\n\t\t\t\t\t\t\tdataProps={data}\n\t\t\t\t\t\t\tmethodProps={setUserSelected}\n\t\t\t\t\t\t\tfeatureProps={setUserFeatures}\n\t\t\t\t\t\t\thandleSubmit={handleSubmit}\n\t\t\t\t\t\t\tuserFeatures={userFeatures}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<MLSetup handleSubmit={handleSubmit} userFeatures={userFeatures} />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/*  ------------------ Map Preview ------------------*/}\n\t\t\t\t\t<div style={{ position: \"relative\" }} className='content4 generalComp'>\n\t\t\t\t\t\t<h6 style={{ marginTop: \"5px\", padding: \"3px\" }}> Preview Map </h6>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<PreviewMap\n\t\t\t\t\t\t\t\tdataProps={data}\n\t\t\t\t\t\t\t\tuserSelectedItems={userSelected}\n\t\t\t\t\t\t\t\tuserClickedProp={userClicked}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* ------------------ Main Map ------------------*/}\n\t\t\t\t\t<div className='content5 generalComp'>\n\t\t\t\t\t\t<h6 style={{ margin: \"5px\", padding: \"3px\" }}> Model View </h6>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<Mainmap\n\t\t\t\t\t\t\t\tdataProps={data}\n\t\t\t\t\t\t\t\tuserSelectedItems={userSelected}\n\t\t\t\t\t\t\t\tuserClickedProp={userClicked}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* ------------------ Mix Viz ------------------*/}\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName='content6 generalComp'\n\t\t\t\t\t\tstyle={{ display: \"flex\", flexDirection: \"row\" }}>\n\t\t\t\t\t\t<div style={{ height: \"100%\", width: \"50%\", flexGrow: \"1\" }}>\n\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t{/* <BoxPlot /> */}\n\t\t\t\t\t\t\t<h6>mamad</h6>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div style={{ height: \"100%\", width: \"50%\", flexGrow: \"1\" }}> </div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* ------------------ Machine Learning Control ------------------*/}\n\t\t\t\t\t{/* <div className='content8 generalComp'>\n\n\t\t\t\t\t</div> */}\n\n\t\t\t\t\t{/* ----------- Data Table /Viz ------------------ */}\n\t\t\t\t\t<div className='content7 generalComp' id='tble' ref={stageCanvasRef}>\n\t\t\t\t\t\t<Toggle\n\t\t\t\t\t\t\tstyle={{ margin: \"5px\" }}\n\t\t\t\t\t\t\ttoggleProps={toggleCheckedMain}\n\t\t\t\t\t\t\tcheckedProps={checkedMain}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcheckedMain === false ? <div>\n\t\t\t\t\t\t\t\t<WorldTable\n\t\t\t\t\t\t\t\t\tdataProps={data}\n\t\t\t\t\t\t\t\t\tuserFeaturesProps={userFeatures}\n\t\t\t\t\t\t\t\t\theightProp={divHeight}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div> :\n\t\t\t\t\t\t\t<div style={{ height: \"95%\" }}>\n\t\t\t\t\t\t\t\t<Viz />\n\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t</div>\n\t\t\t\t</div> :\n\t\t\t\t// Loading\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\theight: \"100vh\",\n\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\t\talignItems: \"center\"\n\t\t\t\t\t}}>\n\t\t\t\t\t<Loading />\n\t\t\t\t</div>}\n\t\t</div>\n\t);\n}\n\nexport default DashApp;\n","import DashApp from './components/DashApp';\nimport 'leaflet/dist/leaflet.css';\n\nfunction App (){\n\treturn (\n\t\t<div>\n\t\t\t<DashApp />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}