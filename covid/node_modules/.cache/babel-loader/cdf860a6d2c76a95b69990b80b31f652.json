{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { useCallback, useContext, useEffect, useLayoutEffect, useState, useRef, useMemo, useDebugValue } from 'react';\nimport defaultConfig, { cache } from './config';\nimport SWRConfigContext from './swr-config-context';\nvar IS_SERVER = typeof window === 'undefined'; // polyfill for requestIdleCallback\n\nvar rIC = IS_SERVER ? null : window['requestIdleCallback'] || function (f) {\n  return setTimeout(f, 1);\n}; // React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\n\nvar useIsomorphicLayoutEffect = IS_SERVER ? useEffect : useLayoutEffect; // global state managers\n\nvar CONCURRENT_PROMISES = {};\nvar CONCURRENT_PROMISES_TS = {};\nvar FOCUS_REVALIDATORS = {};\nvar RECONNECT_REVALIDATORS = {};\nvar CACHE_REVALIDATORS = {};\nvar MUTATION_TS = {};\nvar MUTATION_END_TS = {}; // setup DOM events listeners for `focus` and `reconnect` actions\n\nif (!IS_SERVER && window.addEventListener) {\n  var revalidate_1 = function (revalidators) {\n    if (!defaultConfig.isDocumentVisible() || !defaultConfig.isOnline()) return;\n\n    for (var key in revalidators) {\n      if (revalidators[key][0]) revalidators[key][0]();\n    }\n  }; // focus revalidate\n\n\n  window.addEventListener('visibilitychange', function () {\n    return revalidate_1(FOCUS_REVALIDATORS);\n  }, false);\n  window.addEventListener('focus', function () {\n    return revalidate_1(FOCUS_REVALIDATORS);\n  }, false); // reconnect revalidate\n\n  window.addEventListener('online', function () {\n    return revalidate_1(RECONNECT_REVALIDATORS);\n  }, false);\n}\n\nvar trigger = function (_key, shouldRevalidate) {\n  if (shouldRevalidate === void 0) {\n    shouldRevalidate = true;\n  } // we are ignoring the second argument which correspond to the arguments\n  // the fetcher will receive when key is an array\n\n\n  var _a = cache.serializeKey(_key),\n      key = _a[0],\n      keyErr = _a[2],\n      keyValidating = _a[3];\n\n  if (!key) return Promise.resolve();\n  var updaters = CACHE_REVALIDATORS[key];\n\n  if (key && updaters) {\n    var currentData = cache.get(key);\n    var currentError = cache.get(keyErr);\n    var currentIsValidating = cache.get(keyValidating);\n    var promises = [];\n\n    for (var i = 0; i < updaters.length; ++i) {\n      promises.push(updaters[i](shouldRevalidate, currentData, currentError, currentIsValidating, i > 0));\n    } // return new updated value\n\n\n    return Promise.all(promises).then(function () {\n      return cache.get(key);\n    });\n  }\n\n  return Promise.resolve(cache.get(key));\n};\n\nvar broadcastState = function (key, data, error, isValidating) {\n  var updaters = CACHE_REVALIDATORS[key];\n\n  if (key && updaters) {\n    for (var i = 0; i < updaters.length; ++i) {\n      updaters[i](false, data, error, isValidating);\n    }\n  }\n};\n\nvar mutate = function (_key, _data, shouldRevalidate) {\n  if (shouldRevalidate === void 0) {\n    shouldRevalidate = true;\n  }\n\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, key, keyErr, beforeMutationTs, beforeConcurrentPromisesTs, data, error, err_1, err_2, updaters, promises, i;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          _a = cache.serializeKey(_key), key = _a[0], keyErr = _a[2];\n          if (!key) return [2\n          /*return*/\n          ]; // if there is no new data, call revalidate against the key\n\n          if (typeof _data === 'undefined') return [2\n          /*return*/\n          , trigger(_key, shouldRevalidate) // update timestamps\n          ]; // update timestamps\n\n          MUTATION_TS[key] = Date.now() - 1;\n          MUTATION_END_TS[key] = 0;\n          beforeMutationTs = MUTATION_TS[key];\n          beforeConcurrentPromisesTs = CONCURRENT_PROMISES_TS[key];\n          if (!(_data && typeof _data === 'function')) return [3\n          /*break*/\n          , 5];\n          _b.label = 1;\n\n        case 1:\n          _b.trys.push([1, 3,, 4]);\n\n          return [4\n          /*yield*/\n          , _data(cache.get(key))];\n\n        case 2:\n          data = _b.sent();\n          return [3\n          /*break*/\n          , 4];\n\n        case 3:\n          err_1 = _b.sent();\n          error = err_1;\n          return [3\n          /*break*/\n          , 4];\n\n        case 4:\n          return [3\n          /*break*/\n          , 11];\n\n        case 5:\n          if (!(_data && typeof _data.then === 'function')) return [3\n          /*break*/\n          , 10];\n          _b.label = 6;\n\n        case 6:\n          _b.trys.push([6, 8,, 9]);\n\n          return [4\n          /*yield*/\n          , _data];\n\n        case 7:\n          data = _b.sent();\n          return [3\n          /*break*/\n          , 9];\n\n        case 8:\n          err_2 = _b.sent();\n          error = err_2;\n          return [3\n          /*break*/\n          , 9];\n\n        case 9:\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          data = _data;\n          _b.label = 11;\n\n        case 11:\n          // check if other mutations have occurred since we've started awaiting, if so then do not persist this change\n          if (beforeMutationTs !== MUTATION_TS[key] || beforeConcurrentPromisesTs !== CONCURRENT_PROMISES_TS[key]) {\n            if (error) throw error;\n            return [2\n            /*return*/\n            , data];\n          }\n\n          if (typeof data !== 'undefined') {\n            // update cached data, avoid notifying from the cache\n            cache.set(key, data);\n          }\n\n          cache.set(keyErr, error); // reset the timestamp to mark the mutation has ended\n\n          MUTATION_END_TS[key] = Date.now() - 1;\n          updaters = CACHE_REVALIDATORS[key];\n\n          if (updaters) {\n            promises = [];\n\n            for (i = 0; i < updaters.length; ++i) {\n              promises.push(updaters[i](!!shouldRevalidate, data, error, undefined, i > 0));\n            } // return new updated value\n\n\n            return [2\n            /*return*/\n            , Promise.all(promises).then(function () {\n              if (error) throw error;\n              return cache.get(key);\n            })];\n          } // throw error or return data to be used by caller of mutate\n\n\n          if (error) throw error;\n          return [2\n          /*return*/\n          , data];\n      }\n    });\n  });\n};\n\nfunction useSWR() {\n  var _this = this;\n\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  var _key,\n      fn,\n      config = {};\n\n  if (args.length >= 1) {\n    _key = args[0];\n  }\n\n  if (args.length > 2) {\n    fn = args[1];\n    config = args[2];\n  } else {\n    if (typeof args[1] === 'function') {\n      fn = args[1];\n    } else if (typeof args[1] === 'object') {\n      config = args[1];\n    }\n  } // we assume `key` as the identifier of the request\n  // `key` can change but `fn` shouldn't\n  // (because `revalidate` only depends on `key`)\n  // `keyErr` is the cache key for error objects\n\n\n  var _a = cache.serializeKey(_key),\n      key = _a[0],\n      fnArgs = _a[1],\n      keyErr = _a[2],\n      keyValidating = _a[3];\n\n  config = Object.assign({}, defaultConfig, useContext(SWRConfigContext), config);\n  var configRef = useRef(config);\n  useIsomorphicLayoutEffect(function () {\n    configRef.current = config;\n  });\n\n  if (typeof fn === 'undefined') {\n    // use the global fetcher\n    fn = config.fetcher;\n  }\n\n  var resolveData = function () {\n    var cachedData = cache.get(key);\n    return typeof cachedData === 'undefined' ? config.initialData : cachedData;\n  };\n\n  var initialData = resolveData();\n  var initialError = cache.get(keyErr);\n  var initialIsValidating = !!cache.get(keyValidating); // if a state is accessed (data, error or isValidating),\n  // we add the state to dependencies so if the state is\n  // updated in the future, we can trigger a rerender\n\n  var stateDependencies = useRef({\n    data: false,\n    error: false,\n    isValidating: false\n  });\n  var stateRef = useRef({\n    data: initialData,\n    error: initialError,\n    isValidating: initialIsValidating\n  }); // display the data label in the React DevTools next to SWR hooks\n\n  useDebugValue(stateRef.current.data);\n  var rerender = useState(null)[1];\n  var dispatch = useCallback(function (payload) {\n    var shouldUpdateState = false;\n\n    for (var k in payload) {\n      if (stateRef.current[k] === payload[k]) {\n        continue;\n      }\n\n      stateRef.current[k] = payload[k];\n\n      if (stateDependencies.current[k]) {\n        shouldUpdateState = true;\n      }\n    }\n\n    if (shouldUpdateState || config.suspense) {\n      if (unmountedRef.current) return;\n      rerender({});\n    }\n  }, []); // error ref inside revalidate (is last request errored?)\n\n  var unmountedRef = useRef(false);\n  var keyRef = useRef(key); // do unmount check for callbacks\n\n  var eventsRef = useRef({\n    emit: function (event) {\n      var _a;\n\n      var params = [];\n\n      for (var _i = 1; _i < arguments.length; _i++) {\n        params[_i - 1] = arguments[_i];\n      }\n\n      if (unmountedRef.current) return;\n\n      (_a = configRef.current)[event].apply(_a, params);\n    }\n  });\n  var boundMutate = useCallback(function (data, shouldRevalidate) {\n    return mutate(keyRef.current, data, shouldRevalidate);\n  }, []);\n\n  var addRevalidator = function (revalidators, callback) {\n    if (!callback) return;\n\n    if (!revalidators[key]) {\n      revalidators[key] = [callback];\n    } else {\n      revalidators[key].push(callback);\n    }\n  };\n\n  var removeRevalidator = function (revlidators, callback) {\n    if (revlidators[key]) {\n      var revalidators = revlidators[key];\n      var index = revalidators.indexOf(callback);\n\n      if (index >= 0) {\n        // 10x faster than splice\n        // https://jsperf.com/array-remove-by-index\n        revalidators[index] = revalidators[revalidators.length - 1];\n        revalidators.pop();\n      }\n    }\n  }; // start a revalidation\n\n\n  var revalidate = useCallback(function (revalidateOpts) {\n    if (revalidateOpts === void 0) {\n      revalidateOpts = {};\n    }\n\n    return __awaiter(_this, void 0, void 0, function () {\n      var loading, shouldDeduping, newData, startAt, shouldIgnoreRequest, newState, err_3, retryCount;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!key || !fn) return [2\n            /*return*/\n            , false];\n            if (unmountedRef.current) return [2\n            /*return*/\n            , false];\n            revalidateOpts = Object.assign({\n              dedupe: false\n            }, revalidateOpts);\n            loading = true;\n            shouldDeduping = typeof CONCURRENT_PROMISES[key] !== 'undefined' && revalidateOpts.dedupe;\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 6,, 7]);\n\n            dispatch({\n              isValidating: true\n            });\n            cache.set(keyValidating, true);\n\n            if (!shouldDeduping) {\n              // also update other hooks\n              broadcastState(key, stateRef.current.data, stateRef.current.error, true);\n            }\n\n            newData = void 0;\n            startAt = void 0;\n            if (!shouldDeduping) return [3\n            /*break*/\n            , 3]; // there's already an ongoing request,\n            // this one needs to be deduplicated.\n\n            startAt = CONCURRENT_PROMISES_TS[key];\n            return [4\n            /*yield*/\n            , CONCURRENT_PROMISES[key]];\n\n          case 2:\n            newData = _a.sent();\n            return [3\n            /*break*/\n            , 5];\n\n          case 3:\n            // if no cache being rendered currently (it shows a blank page),\n            // we trigger the loading slow event.\n            if (config.loadingTimeout && !cache.get(key)) {\n              setTimeout(function () {\n                if (loading) eventsRef.current.emit('onLoadingSlow', key, config);\n              }, config.loadingTimeout);\n            }\n\n            if (fnArgs !== null) {\n              CONCURRENT_PROMISES[key] = fn.apply(void 0, fnArgs);\n            } else {\n              CONCURRENT_PROMISES[key] = fn(key);\n            }\n\n            CONCURRENT_PROMISES_TS[key] = startAt = Date.now();\n            return [4\n            /*yield*/\n            , CONCURRENT_PROMISES[key]];\n\n          case 4:\n            newData = _a.sent();\n            setTimeout(function () {\n              delete CONCURRENT_PROMISES[key];\n              delete CONCURRENT_PROMISES_TS[key];\n            }, config.dedupingInterval); // trigger the success event,\n            // only do this for the original request.\n\n            eventsRef.current.emit('onSuccess', newData, key, config);\n            _a.label = 5;\n\n          case 5:\n            shouldIgnoreRequest = // if there're other ongoing request(s), started after the current one,\n            // we need to ignore the current one to avoid possible race conditions:\n            //   req1------------------>res1        (current one)\n            //        req2---------------->res2\n            // the request that fired later will always be kept.\n            CONCURRENT_PROMISES_TS[key] > startAt || // if there're other mutations(s), overlapped with the current revalidation:\n            // case 1:\n            //   req------------------>res\n            //       mutate------>end\n            // case 2:\n            //         req------------>res\n            //   mutate------>end\n            // case 3:\n            //   req------------------>res\n            //       mutate-------...---------->\n            // we have to ignore the revalidation result (res) because it's no longer fresh.\n            // meanwhile, a new revalidation should be triggered when the mutation ends.\n            MUTATION_TS[key] && ( // case 1\n            startAt <= MUTATION_TS[key] || // case 2\n            startAt <= MUTATION_END_TS[key] || // case 3\n            MUTATION_END_TS[key] === 0);\n\n            if (shouldIgnoreRequest) {\n              dispatch({\n                isValidating: false\n              });\n              return [2\n              /*return*/\n              , false];\n            }\n\n            cache.set(key, newData);\n            cache.set(keyErr, undefined);\n            cache.set(keyValidating, false);\n            newState = {\n              isValidating: false\n            };\n\n            if (typeof stateRef.current.error !== 'undefined') {\n              // we don't have an error\n              newState.error = undefined;\n            }\n\n            if (!config.compare(stateRef.current.data, newData)) {\n              // deep compare to avoid extra re-render\n              // data changed\n              newState.data = newData;\n            } // merge the new state\n\n\n            dispatch(newState);\n\n            if (!shouldDeduping) {\n              // also update other hooks\n              broadcastState(key, newData, newState.error, false);\n            }\n\n            return [3\n            /*break*/\n            , 7];\n\n          case 6:\n            err_3 = _a.sent();\n            delete CONCURRENT_PROMISES[key];\n            delete CONCURRENT_PROMISES_TS[key];\n            cache.set(keyErr, err_3); // get a new error\n            // don't use deep equal for errors\n\n            if (stateRef.current.error !== err_3) {\n              // we keep the stale data\n              dispatch({\n                isValidating: false,\n                error: err_3\n              });\n\n              if (!shouldDeduping) {\n                // also broadcast to update other hooks\n                broadcastState(key, undefined, err_3, false);\n              }\n            } // events and retry\n\n\n            eventsRef.current.emit('onError', err_3, key, config);\n\n            if (config.shouldRetryOnError) {\n              retryCount = (revalidateOpts.retryCount || 0) + 1;\n              eventsRef.current.emit('onErrorRetry', err_3, key, config, revalidate, Object.assign({\n                dedupe: true\n              }, revalidateOpts, {\n                retryCount: retryCount\n              }));\n            }\n\n            return [3\n            /*break*/\n            , 7];\n\n          case 7:\n            loading = false;\n            return [2\n            /*return*/\n            , true];\n        }\n      });\n    });\n  }, [key]); // mounted (client side rendering)\n\n  useIsomorphicLayoutEffect(function () {\n    if (!key) return undefined; // after `key` updates, we need to mark it as mounted\n\n    unmountedRef.current = false; // after the component is mounted (hydrated),\n    // we need to update the data from the cache\n    // and trigger a revalidation\n\n    var currentHookData = stateRef.current.data;\n    var latestKeyedData = resolveData(); // update the state if the key changed (not the inital render) or cache updated\n\n    if (keyRef.current !== key) {\n      keyRef.current = key;\n    }\n\n    if (!config.compare(currentHookData, latestKeyedData)) {\n      dispatch({\n        data: latestKeyedData\n      });\n    } // revalidate with deduping\n\n\n    var softRevalidate = function () {\n      return revalidate({\n        dedupe: true\n      });\n    }; // trigger a revalidation\n\n\n    if (config.revalidateOnMount || !config.initialData && config.revalidateOnMount === undefined) {\n      if (typeof latestKeyedData !== 'undefined') {\n        // delay revalidate if there's cache\n        // to not block the rendering\n        rIC(softRevalidate);\n      } else {\n        softRevalidate();\n      }\n    }\n\n    var pending = false;\n\n    var onFocus = function () {\n      if (pending || !configRef.current.revalidateOnFocus) return;\n      pending = true;\n      softRevalidate();\n      setTimeout(function () {\n        return pending = false;\n      }, configRef.current.focusThrottleInterval);\n    };\n\n    var onReconnect = function () {\n      if (configRef.current.revalidateOnReconnect) {\n        softRevalidate();\n      }\n    }; // register global cache update listener\n\n\n    var onUpdate = function (shouldRevalidate, updatedData, updatedError, updatedIsValidating, dedupe) {\n      if (shouldRevalidate === void 0) {\n        shouldRevalidate = true;\n      }\n\n      if (dedupe === void 0) {\n        dedupe = true;\n      } // update hook state\n\n\n      var newState = {};\n      var needUpdate = false;\n\n      if (typeof updatedData !== 'undefined' && !config.compare(stateRef.current.data, updatedData)) {\n        newState.data = updatedData;\n        needUpdate = true;\n      } // always update error\n      // because it can be `undefined`\n\n\n      if (stateRef.current.error !== updatedError) {\n        newState.error = updatedError;\n        needUpdate = true;\n      }\n\n      if (typeof updatedIsValidating !== 'undefined' && stateRef.current.isValidating !== updatedIsValidating) {\n        newState.isValidating = updatedIsValidating;\n        needUpdate = true;\n      }\n\n      if (needUpdate) {\n        dispatch(newState);\n      }\n\n      if (shouldRevalidate) {\n        if (dedupe) {\n          return softRevalidate();\n        } else {\n          return revalidate();\n        }\n      }\n\n      return false;\n    };\n\n    addRevalidator(FOCUS_REVALIDATORS, onFocus);\n    addRevalidator(RECONNECT_REVALIDATORS, onReconnect);\n    addRevalidator(CACHE_REVALIDATORS, onUpdate);\n    return function () {\n      // cleanup\n      dispatch = function () {\n        return null;\n      }; // mark it as unmounted\n\n\n      unmountedRef.current = true;\n      removeRevalidator(FOCUS_REVALIDATORS, onFocus);\n      removeRevalidator(RECONNECT_REVALIDATORS, onReconnect);\n      removeRevalidator(CACHE_REVALIDATORS, onUpdate);\n    };\n  }, [key, revalidate]);\n  useIsomorphicLayoutEffect(function () {\n    var timer = null;\n\n    var tick = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (!(!stateRef.current.error && (configRef.current.refreshWhenHidden || configRef.current.isDocumentVisible()) && (configRef.current.refreshWhenOffline || configRef.current.isOnline()))) return [3\n              /*break*/\n              , 2]; // only revalidate when the page is visible\n              // if API request errored, we stop polling in this round\n              // and let the error retry function handle it\n\n              return [4\n              /*yield*/\n              , revalidate({\n                dedupe: true\n              })];\n\n            case 1:\n              // only revalidate when the page is visible\n              // if API request errored, we stop polling in this round\n              // and let the error retry function handle it\n              _a.sent();\n\n              _a.label = 2;\n\n            case 2:\n              // Read the latest refreshInterval\n              if (configRef.current.refreshInterval && !stateRef.current.error) {\n                timer = setTimeout(tick, configRef.current.refreshInterval);\n              }\n\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    if (configRef.current.refreshInterval) {\n      timer = setTimeout(tick, configRef.current.refreshInterval);\n    }\n\n    return function () {\n      if (timer) clearTimeout(timer);\n    };\n  }, [config.refreshInterval, config.refreshWhenHidden, config.refreshWhenOffline, revalidate]); // define returned state\n  // can be memorized since the state is a ref\n\n  var memoizedState = useMemo(function () {\n    var state = {\n      revalidate: revalidate,\n      mutate: boundMutate\n    };\n    Object.defineProperties(state, {\n      error: {\n        // `key` might be changed in the upcoming hook re-render,\n        // but the previous state will stay\n        // so we need to match the latest key and data (fallback to `initialData`)\n        get: function () {\n          stateDependencies.current.error = true;\n          return keyRef.current === key ? stateRef.current.error : initialError;\n        },\n        enumerable: true\n      },\n      data: {\n        get: function () {\n          stateDependencies.current.data = true;\n          return keyRef.current === key ? stateRef.current.data : initialData;\n        },\n        enumerable: true\n      },\n      isValidating: {\n        get: function () {\n          stateDependencies.current.isValidating = true;\n          return stateRef.current.isValidating;\n        },\n        enumerable: true\n      }\n    });\n    return state;\n  }, [revalidate]); // suspense\n\n  if (config.suspense) {\n    // in suspense mode, we can't return empty state\n    // (it should be suspended)\n    // try to get data and error from cache\n    var latestData = cache.get(key);\n    var latestError = cache.get(keyErr);\n\n    if (typeof latestData === 'undefined') {\n      latestData = initialData;\n    }\n\n    if (typeof latestError === 'undefined') {\n      latestError = initialError;\n    }\n\n    if (typeof latestData === 'undefined' && typeof latestError === 'undefined') {\n      // need to start the request if it hasn't\n      if (!CONCURRENT_PROMISES[key]) {\n        // trigger revalidate immediately\n        // to get the promise\n        revalidate();\n      }\n\n      if (CONCURRENT_PROMISES[key] && typeof CONCURRENT_PROMISES[key].then === 'function') {\n        // if it is a promise\n        throw CONCURRENT_PROMISES[key];\n      } // it's a value, return it directly (override)\n\n\n      latestData = CONCURRENT_PROMISES[key];\n    }\n\n    if (typeof latestData === 'undefined' && latestError) {\n      // in suspense mode, throw error if there's no content\n      throw latestError;\n    } // return the latest data / error from cache\n    // in case `key` has changed\n\n\n    return {\n      error: latestError,\n      data: latestData,\n      revalidate: revalidate,\n      mutate: boundMutate,\n      isValidating: stateRef.current.isValidating\n    };\n  }\n\n  return memoizedState;\n}\n\nvar SWRConfig = SWRConfigContext.Provider;\nexport { trigger, mutate, SWRConfig };\nexport default useSWR;","map":{"version":3,"sources":["E:/Fall2020/Studio/GIS/React/YARA/covid/node_modules/swr/esm/use-swr.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","useCallback","useContext","useEffect","useLayoutEffect","useState","useRef","useMemo","useDebugValue","defaultConfig","cache","SWRConfigContext","IS_SERVER","window","rIC","setTimeout","useIsomorphicLayoutEffect","CONCURRENT_PROMISES","CONCURRENT_PROMISES_TS","FOCUS_REVALIDATORS","RECONNECT_REVALIDATORS","CACHE_REVALIDATORS","MUTATION_TS","MUTATION_END_TS","addEventListener","revalidate_1","revalidators","isDocumentVisible","isOnline","key","trigger","_key","shouldRevalidate","_a","serializeKey","keyErr","keyValidating","updaters","currentData","get","currentError","currentIsValidating","promises","i","all","broadcastState","data","error","isValidating","mutate","_data","beforeMutationTs","beforeConcurrentPromisesTs","err_1","err_2","_b","Date","now","set","undefined","useSWR","_this","args","_i","arguments","fn","config","fnArgs","Object","assign","configRef","current","fetcher","resolveData","cachedData","initialData","initialError","initialIsValidating","stateDependencies","stateRef","rerender","dispatch","payload","shouldUpdateState","k","suspense","unmountedRef","keyRef","eventsRef","emit","event","params","boundMutate","addRevalidator","callback","removeRevalidator","revlidators","index","indexOf","revalidate","revalidateOpts","loading","shouldDeduping","newData","startAt","shouldIgnoreRequest","newState","err_3","retryCount","dedupe","loadingTimeout","dedupingInterval","compare","shouldRetryOnError","currentHookData","latestKeyedData","softRevalidate","revalidateOnMount","pending","onFocus","revalidateOnFocus","focusThrottleInterval","onReconnect","revalidateOnReconnect","onUpdate","updatedData","updatedError","updatedIsValidating","needUpdate","timer","tick","refreshWhenHidden","refreshWhenOffline","refreshInterval","clearTimeout","memoizedState","state","defineProperties","enumerable","latestData","latestError","SWRConfig","Provider"],"mappings":"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","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { useCallback, useContext, useEffect, useLayoutEffect, useState, useRef, useMemo, useDebugValue } from 'react';\nimport defaultConfig, { cache } from './config';\nimport SWRConfigContext from './swr-config-context';\nvar IS_SERVER = typeof window === 'undefined';\n// polyfill for requestIdleCallback\nvar rIC = IS_SERVER\n    ? null\n    : window['requestIdleCallback'] || (function (f) { return setTimeout(f, 1); });\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\nvar useIsomorphicLayoutEffect = IS_SERVER ? useEffect : useLayoutEffect;\n// global state managers\nvar CONCURRENT_PROMISES = {};\nvar CONCURRENT_PROMISES_TS = {};\nvar FOCUS_REVALIDATORS = {};\nvar RECONNECT_REVALIDATORS = {};\nvar CACHE_REVALIDATORS = {};\nvar MUTATION_TS = {};\nvar MUTATION_END_TS = {};\n// setup DOM events listeners for `focus` and `reconnect` actions\nif (!IS_SERVER && window.addEventListener) {\n    var revalidate_1 = function (revalidators) {\n        if (!defaultConfig.isDocumentVisible() || !defaultConfig.isOnline())\n            return;\n        for (var key in revalidators) {\n            if (revalidators[key][0])\n                revalidators[key][0]();\n        }\n    };\n    // focus revalidate\n    window.addEventListener('visibilitychange', function () { return revalidate_1(FOCUS_REVALIDATORS); }, false);\n    window.addEventListener('focus', function () { return revalidate_1(FOCUS_REVALIDATORS); }, false);\n    // reconnect revalidate\n    window.addEventListener('online', function () { return revalidate_1(RECONNECT_REVALIDATORS); }, false);\n}\nvar trigger = function (_key, shouldRevalidate) {\n    if (shouldRevalidate === void 0) { shouldRevalidate = true; }\n    // we are ignoring the second argument which correspond to the arguments\n    // the fetcher will receive when key is an array\n    var _a = cache.serializeKey(_key), key = _a[0], keyErr = _a[2], keyValidating = _a[3];\n    if (!key)\n        return Promise.resolve();\n    var updaters = CACHE_REVALIDATORS[key];\n    if (key && updaters) {\n        var currentData = cache.get(key);\n        var currentError = cache.get(keyErr);\n        var currentIsValidating = cache.get(keyValidating);\n        var promises = [];\n        for (var i = 0; i < updaters.length; ++i) {\n            promises.push(updaters[i](shouldRevalidate, currentData, currentError, currentIsValidating, i > 0));\n        }\n        // return new updated value\n        return Promise.all(promises).then(function () { return cache.get(key); });\n    }\n    return Promise.resolve(cache.get(key));\n};\nvar broadcastState = function (key, data, error, isValidating) {\n    var updaters = CACHE_REVALIDATORS[key];\n    if (key && updaters) {\n        for (var i = 0; i < updaters.length; ++i) {\n            updaters[i](false, data, error, isValidating);\n        }\n    }\n};\nvar mutate = function (_key, _data, shouldRevalidate) {\n    if (shouldRevalidate === void 0) { shouldRevalidate = true; }\n    return __awaiter(void 0, void 0, void 0, function () {\n        var _a, key, keyErr, beforeMutationTs, beforeConcurrentPromisesTs, data, error, err_1, err_2, updaters, promises, i;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    _a = cache.serializeKey(_key), key = _a[0], keyErr = _a[2];\n                    if (!key)\n                        return [2 /*return*/];\n                    // if there is no new data, call revalidate against the key\n                    if (typeof _data === 'undefined')\n                        return [2 /*return*/, trigger(_key, shouldRevalidate)\n                            // update timestamps\n                        ];\n                    // update timestamps\n                    MUTATION_TS[key] = Date.now() - 1;\n                    MUTATION_END_TS[key] = 0;\n                    beforeMutationTs = MUTATION_TS[key];\n                    beforeConcurrentPromisesTs = CONCURRENT_PROMISES_TS[key];\n                    if (!(_data && typeof _data === 'function')) return [3 /*break*/, 5];\n                    _b.label = 1;\n                case 1:\n                    _b.trys.push([1, 3, , 4]);\n                    return [4 /*yield*/, _data(cache.get(key))];\n                case 2:\n                    data = _b.sent();\n                    return [3 /*break*/, 4];\n                case 3:\n                    err_1 = _b.sent();\n                    error = err_1;\n                    return [3 /*break*/, 4];\n                case 4: return [3 /*break*/, 11];\n                case 5:\n                    if (!(_data && typeof _data.then === 'function')) return [3 /*break*/, 10];\n                    _b.label = 6;\n                case 6:\n                    _b.trys.push([6, 8, , 9]);\n                    return [4 /*yield*/, _data];\n                case 7:\n                    data = _b.sent();\n                    return [3 /*break*/, 9];\n                case 8:\n                    err_2 = _b.sent();\n                    error = err_2;\n                    return [3 /*break*/, 9];\n                case 9: return [3 /*break*/, 11];\n                case 10:\n                    data = _data;\n                    _b.label = 11;\n                case 11:\n                    // check if other mutations have occurred since we've started awaiting, if so then do not persist this change\n                    if (beforeMutationTs !== MUTATION_TS[key] ||\n                        beforeConcurrentPromisesTs !== CONCURRENT_PROMISES_TS[key]) {\n                        if (error)\n                            throw error;\n                        return [2 /*return*/, data];\n                    }\n                    if (typeof data !== 'undefined') {\n                        // update cached data, avoid notifying from the cache\n                        cache.set(key, data);\n                    }\n                    cache.set(keyErr, error);\n                    // reset the timestamp to mark the mutation has ended\n                    MUTATION_END_TS[key] = Date.now() - 1;\n                    updaters = CACHE_REVALIDATORS[key];\n                    if (updaters) {\n                        promises = [];\n                        for (i = 0; i < updaters.length; ++i) {\n                            promises.push(updaters[i](!!shouldRevalidate, data, error, undefined, i > 0));\n                        }\n                        // return new updated value\n                        return [2 /*return*/, Promise.all(promises).then(function () {\n                                if (error)\n                                    throw error;\n                                return cache.get(key);\n                            })];\n                    }\n                    // throw error or return data to be used by caller of mutate\n                    if (error)\n                        throw error;\n                    return [2 /*return*/, data];\n            }\n        });\n    });\n};\nfunction useSWR() {\n    var _this = this;\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var _key, fn, config = {};\n    if (args.length >= 1) {\n        _key = args[0];\n    }\n    if (args.length > 2) {\n        fn = args[1];\n        config = args[2];\n    }\n    else {\n        if (typeof args[1] === 'function') {\n            fn = args[1];\n        }\n        else if (typeof args[1] === 'object') {\n            config = args[1];\n        }\n    }\n    // we assume `key` as the identifier of the request\n    // `key` can change but `fn` shouldn't\n    // (because `revalidate` only depends on `key`)\n    // `keyErr` is the cache key for error objects\n    var _a = cache.serializeKey(_key), key = _a[0], fnArgs = _a[1], keyErr = _a[2], keyValidating = _a[3];\n    config = Object.assign({}, defaultConfig, useContext(SWRConfigContext), config);\n    var configRef = useRef(config);\n    useIsomorphicLayoutEffect(function () {\n        configRef.current = config;\n    });\n    if (typeof fn === 'undefined') {\n        // use the global fetcher\n        fn = config.fetcher;\n    }\n    var resolveData = function () {\n        var cachedData = cache.get(key);\n        return typeof cachedData === 'undefined' ? config.initialData : cachedData;\n    };\n    var initialData = resolveData();\n    var initialError = cache.get(keyErr);\n    var initialIsValidating = !!cache.get(keyValidating);\n    // if a state is accessed (data, error or isValidating),\n    // we add the state to dependencies so if the state is\n    // updated in the future, we can trigger a rerender\n    var stateDependencies = useRef({\n        data: false,\n        error: false,\n        isValidating: false\n    });\n    var stateRef = useRef({\n        data: initialData,\n        error: initialError,\n        isValidating: initialIsValidating\n    });\n    // display the data label in the React DevTools next to SWR hooks\n    useDebugValue(stateRef.current.data);\n    var rerender = useState(null)[1];\n    var dispatch = useCallback(function (payload) {\n        var shouldUpdateState = false;\n        for (var k in payload) {\n            if (stateRef.current[k] === payload[k]) {\n                continue;\n            }\n            stateRef.current[k] = payload[k];\n            if (stateDependencies.current[k]) {\n                shouldUpdateState = true;\n            }\n        }\n        if (shouldUpdateState || config.suspense) {\n            if (unmountedRef.current)\n                return;\n            rerender({});\n        }\n    }, []);\n    // error ref inside revalidate (is last request errored?)\n    var unmountedRef = useRef(false);\n    var keyRef = useRef(key);\n    // do unmount check for callbacks\n    var eventsRef = useRef({\n        emit: function (event) {\n            var _a;\n            var params = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                params[_i - 1] = arguments[_i];\n            }\n            if (unmountedRef.current)\n                return;\n            (_a = configRef.current)[event].apply(_a, params);\n        }\n    });\n    var boundMutate = useCallback(function (data, shouldRevalidate) {\n        return mutate(keyRef.current, data, shouldRevalidate);\n    }, []);\n    var addRevalidator = function (revalidators, callback) {\n        if (!callback)\n            return;\n        if (!revalidators[key]) {\n            revalidators[key] = [callback];\n        }\n        else {\n            revalidators[key].push(callback);\n        }\n    };\n    var removeRevalidator = function (revlidators, callback) {\n        if (revlidators[key]) {\n            var revalidators = revlidators[key];\n            var index = revalidators.indexOf(callback);\n            if (index >= 0) {\n                // 10x faster than splice\n                // https://jsperf.com/array-remove-by-index\n                revalidators[index] = revalidators[revalidators.length - 1];\n                revalidators.pop();\n            }\n        }\n    };\n    // start a revalidation\n    var revalidate = useCallback(function (revalidateOpts) {\n        if (revalidateOpts === void 0) { revalidateOpts = {}; }\n        return __awaiter(_this, void 0, void 0, function () {\n            var loading, shouldDeduping, newData, startAt, shouldIgnoreRequest, newState, err_3, retryCount;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!key || !fn)\n                            return [2 /*return*/, false];\n                        if (unmountedRef.current)\n                            return [2 /*return*/, false];\n                        revalidateOpts = Object.assign({ dedupe: false }, revalidateOpts);\n                        loading = true;\n                        shouldDeduping = typeof CONCURRENT_PROMISES[key] !== 'undefined' && revalidateOpts.dedupe;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 6, , 7]);\n                        dispatch({\n                            isValidating: true\n                        });\n                        cache.set(keyValidating, true);\n                        if (!shouldDeduping) {\n                            // also update other hooks\n                            broadcastState(key, stateRef.current.data, stateRef.current.error, true);\n                        }\n                        newData = void 0;\n                        startAt = void 0;\n                        if (!shouldDeduping) return [3 /*break*/, 3];\n                        // there's already an ongoing request,\n                        // this one needs to be deduplicated.\n                        startAt = CONCURRENT_PROMISES_TS[key];\n                        return [4 /*yield*/, CONCURRENT_PROMISES[key]];\n                    case 2:\n                        newData = _a.sent();\n                        return [3 /*break*/, 5];\n                    case 3:\n                        // if no cache being rendered currently (it shows a blank page),\n                        // we trigger the loading slow event.\n                        if (config.loadingTimeout && !cache.get(key)) {\n                            setTimeout(function () {\n                                if (loading)\n                                    eventsRef.current.emit('onLoadingSlow', key, config);\n                            }, config.loadingTimeout);\n                        }\n                        if (fnArgs !== null) {\n                            CONCURRENT_PROMISES[key] = fn.apply(void 0, fnArgs);\n                        }\n                        else {\n                            CONCURRENT_PROMISES[key] = fn(key);\n                        }\n                        CONCURRENT_PROMISES_TS[key] = startAt = Date.now();\n                        return [4 /*yield*/, CONCURRENT_PROMISES[key]];\n                    case 4:\n                        newData = _a.sent();\n                        setTimeout(function () {\n                            delete CONCURRENT_PROMISES[key];\n                            delete CONCURRENT_PROMISES_TS[key];\n                        }, config.dedupingInterval);\n                        // trigger the success event,\n                        // only do this for the original request.\n                        eventsRef.current.emit('onSuccess', newData, key, config);\n                        _a.label = 5;\n                    case 5:\n                        shouldIgnoreRequest = \n                        // if there're other ongoing request(s), started after the current one,\n                        // we need to ignore the current one to avoid possible race conditions:\n                        //   req1------------------>res1        (current one)\n                        //        req2---------------->res2\n                        // the request that fired later will always be kept.\n                        CONCURRENT_PROMISES_TS[key] > startAt ||\n                            // if there're other mutations(s), overlapped with the current revalidation:\n                            // case 1:\n                            //   req------------------>res\n                            //       mutate------>end\n                            // case 2:\n                            //         req------------>res\n                            //   mutate------>end\n                            // case 3:\n                            //   req------------------>res\n                            //       mutate-------...---------->\n                            // we have to ignore the revalidation result (res) because it's no longer fresh.\n                            // meanwhile, a new revalidation should be triggered when the mutation ends.\n                            (MUTATION_TS[key] &&\n                                // case 1\n                                (startAt <= MUTATION_TS[key] ||\n                                    // case 2\n                                    startAt <= MUTATION_END_TS[key] ||\n                                    // case 3\n                                    MUTATION_END_TS[key] === 0));\n                        if (shouldIgnoreRequest) {\n                            dispatch({ isValidating: false });\n                            return [2 /*return*/, false];\n                        }\n                        cache.set(key, newData);\n                        cache.set(keyErr, undefined);\n                        cache.set(keyValidating, false);\n                        newState = {\n                            isValidating: false\n                        };\n                        if (typeof stateRef.current.error !== 'undefined') {\n                            // we don't have an error\n                            newState.error = undefined;\n                        }\n                        if (!config.compare(stateRef.current.data, newData)) {\n                            // deep compare to avoid extra re-render\n                            // data changed\n                            newState.data = newData;\n                        }\n                        // merge the new state\n                        dispatch(newState);\n                        if (!shouldDeduping) {\n                            // also update other hooks\n                            broadcastState(key, newData, newState.error, false);\n                        }\n                        return [3 /*break*/, 7];\n                    case 6:\n                        err_3 = _a.sent();\n                        delete CONCURRENT_PROMISES[key];\n                        delete CONCURRENT_PROMISES_TS[key];\n                        cache.set(keyErr, err_3);\n                        // get a new error\n                        // don't use deep equal for errors\n                        if (stateRef.current.error !== err_3) {\n                            // we keep the stale data\n                            dispatch({\n                                isValidating: false,\n                                error: err_3\n                            });\n                            if (!shouldDeduping) {\n                                // also broadcast to update other hooks\n                                broadcastState(key, undefined, err_3, false);\n                            }\n                        }\n                        // events and retry\n                        eventsRef.current.emit('onError', err_3, key, config);\n                        if (config.shouldRetryOnError) {\n                            retryCount = (revalidateOpts.retryCount || 0) + 1;\n                            eventsRef.current.emit('onErrorRetry', err_3, key, config, revalidate, Object.assign({ dedupe: true }, revalidateOpts, { retryCount: retryCount }));\n                        }\n                        return [3 /*break*/, 7];\n                    case 7:\n                        loading = false;\n                        return [2 /*return*/, true];\n                }\n            });\n        });\n    }, [key]);\n    // mounted (client side rendering)\n    useIsomorphicLayoutEffect(function () {\n        if (!key)\n            return undefined;\n        // after `key` updates, we need to mark it as mounted\n        unmountedRef.current = false;\n        // after the component is mounted (hydrated),\n        // we need to update the data from the cache\n        // and trigger a revalidation\n        var currentHookData = stateRef.current.data;\n        var latestKeyedData = resolveData();\n        // update the state if the key changed (not the inital render) or cache updated\n        if (keyRef.current !== key) {\n            keyRef.current = key;\n        }\n        if (!config.compare(currentHookData, latestKeyedData)) {\n            dispatch({ data: latestKeyedData });\n        }\n        // revalidate with deduping\n        var softRevalidate = function () { return revalidate({ dedupe: true }); };\n        // trigger a revalidation\n        if (config.revalidateOnMount ||\n            (!config.initialData && config.revalidateOnMount === undefined)) {\n            if (typeof latestKeyedData !== 'undefined') {\n                // delay revalidate if there's cache\n                // to not block the rendering\n                rIC(softRevalidate);\n            }\n            else {\n                softRevalidate();\n            }\n        }\n        var pending = false;\n        var onFocus = function () {\n            if (pending || !configRef.current.revalidateOnFocus)\n                return;\n            pending = true;\n            softRevalidate();\n            setTimeout(function () { return (pending = false); }, configRef.current.focusThrottleInterval);\n        };\n        var onReconnect = function () {\n            if (configRef.current.revalidateOnReconnect) {\n                softRevalidate();\n            }\n        };\n        // register global cache update listener\n        var onUpdate = function (shouldRevalidate, updatedData, updatedError, updatedIsValidating, dedupe) {\n            if (shouldRevalidate === void 0) { shouldRevalidate = true; }\n            if (dedupe === void 0) { dedupe = true; }\n            // update hook state\n            var newState = {};\n            var needUpdate = false;\n            if (typeof updatedData !== 'undefined' &&\n                !config.compare(stateRef.current.data, updatedData)) {\n                newState.data = updatedData;\n                needUpdate = true;\n            }\n            // always update error\n            // because it can be `undefined`\n            if (stateRef.current.error !== updatedError) {\n                newState.error = updatedError;\n                needUpdate = true;\n            }\n            if (typeof updatedIsValidating !== 'undefined' &&\n                stateRef.current.isValidating !== updatedIsValidating) {\n                newState.isValidating = updatedIsValidating;\n                needUpdate = true;\n            }\n            if (needUpdate) {\n                dispatch(newState);\n            }\n            if (shouldRevalidate) {\n                if (dedupe) {\n                    return softRevalidate();\n                }\n                else {\n                    return revalidate();\n                }\n            }\n            return false;\n        };\n        addRevalidator(FOCUS_REVALIDATORS, onFocus);\n        addRevalidator(RECONNECT_REVALIDATORS, onReconnect);\n        addRevalidator(CACHE_REVALIDATORS, onUpdate);\n        return function () {\n            // cleanup\n            dispatch = function () { return null; };\n            // mark it as unmounted\n            unmountedRef.current = true;\n            removeRevalidator(FOCUS_REVALIDATORS, onFocus);\n            removeRevalidator(RECONNECT_REVALIDATORS, onReconnect);\n            removeRevalidator(CACHE_REVALIDATORS, onUpdate);\n        };\n    }, [key, revalidate]);\n    useIsomorphicLayoutEffect(function () {\n        var timer = null;\n        var tick = function () { return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(!stateRef.current.error &&\n                            (configRef.current.refreshWhenHidden ||\n                                configRef.current.isDocumentVisible()) &&\n                            (configRef.current.refreshWhenOffline || configRef.current.isOnline()))) return [3 /*break*/, 2];\n                        // only revalidate when the page is visible\n                        // if API request errored, we stop polling in this round\n                        // and let the error retry function handle it\n                        return [4 /*yield*/, revalidate({ dedupe: true })];\n                    case 1:\n                        // only revalidate when the page is visible\n                        // if API request errored, we stop polling in this round\n                        // and let the error retry function handle it\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        // Read the latest refreshInterval\n                        if (configRef.current.refreshInterval && !stateRef.current.error) {\n                            timer = setTimeout(tick, configRef.current.refreshInterval);\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        }); };\n        if (configRef.current.refreshInterval) {\n            timer = setTimeout(tick, configRef.current.refreshInterval);\n        }\n        return function () {\n            if (timer)\n                clearTimeout(timer);\n        };\n    }, [\n        config.refreshInterval,\n        config.refreshWhenHidden,\n        config.refreshWhenOffline,\n        revalidate\n    ]);\n    // define returned state\n    // can be memorized since the state is a ref\n    var memoizedState = useMemo(function () {\n        var state = { revalidate: revalidate, mutate: boundMutate };\n        Object.defineProperties(state, {\n            error: {\n                // `key` might be changed in the upcoming hook re-render,\n                // but the previous state will stay\n                // so we need to match the latest key and data (fallback to `initialData`)\n                get: function () {\n                    stateDependencies.current.error = true;\n                    return keyRef.current === key ? stateRef.current.error : initialError;\n                },\n                enumerable: true\n            },\n            data: {\n                get: function () {\n                    stateDependencies.current.data = true;\n                    return keyRef.current === key ? stateRef.current.data : initialData;\n                },\n                enumerable: true\n            },\n            isValidating: {\n                get: function () {\n                    stateDependencies.current.isValidating = true;\n                    return stateRef.current.isValidating;\n                },\n                enumerable: true\n            }\n        });\n        return state;\n    }, [revalidate]);\n    // suspense\n    if (config.suspense) {\n        // in suspense mode, we can't return empty state\n        // (it should be suspended)\n        // try to get data and error from cache\n        var latestData = cache.get(key);\n        var latestError = cache.get(keyErr);\n        if (typeof latestData === 'undefined') {\n            latestData = initialData;\n        }\n        if (typeof latestError === 'undefined') {\n            latestError = initialError;\n        }\n        if (typeof latestData === 'undefined' &&\n            typeof latestError === 'undefined') {\n            // need to start the request if it hasn't\n            if (!CONCURRENT_PROMISES[key]) {\n                // trigger revalidate immediately\n                // to get the promise\n                revalidate();\n            }\n            if (CONCURRENT_PROMISES[key] &&\n                typeof CONCURRENT_PROMISES[key].then === 'function') {\n                // if it is a promise\n                throw CONCURRENT_PROMISES[key];\n            }\n            // it's a value, return it directly (override)\n            latestData = CONCURRENT_PROMISES[key];\n        }\n        if (typeof latestData === 'undefined' && latestError) {\n            // in suspense mode, throw error if there's no content\n            throw latestError;\n        }\n        // return the latest data / error from cache\n        // in case `key` has changed\n        return {\n            error: latestError,\n            data: latestData,\n            revalidate: revalidate,\n            mutate: boundMutate,\n            isValidating: stateRef.current.isValidating\n        };\n    }\n    return memoizedState;\n}\nvar SWRConfig = SWRConfigContext.Provider;\nexport { trigger, mutate, SWRConfig };\nexport default useSWR;\n"]},"metadata":{},"sourceType":"module"}